Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/Import.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/ImportStatus.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/ItemPanel$Item.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/ItemPanel.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/PreviewError.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/Publish.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/Transform.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/actions/XMLPreview.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/concurrent/UploadIndexer.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/mapping/MappingVersionControl.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/persistent/DataUpload.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/persistent/EsePublication.class matches
WEB-INF/classes/gr/ntua/ivml/mint/persistent/Publication.hbm.xml:			<discriminator formula="(select position( 'lido' in coalesce( target_schema,''))>0 from Publication p where p.publication_id = publication_id)" 
Binary file WEB-INF/classes/gr/ntua/ivml/mint/test/PublicationTest.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/test/TestUploadIndexer.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/util/Import.class matches
Binary file WEB-INF/classes/gr/ntua/ivml/mint/view/Import.class matches
WEB-INF/classes/mint.properties:lido_to_ese_xsl=WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl
WEB-INF/jsp/_includeimportpub.jsp:				     <a href="download.action?dbId=<s:property value="trans.dbID"/>&transformed=true" title="Download tranformed items" > <img src="images/lidodown.png" width="30" height="23" style="vertical-align:middle;margin-left: -3px;">Download LIDO</a>
WEB-INF/jsp/_includeimportstat.jsp:										<s:if test="lido==true && status=='OK'">
WEB-INF/jsp/documentation.json:{"objectClassificationWrap":"\n\t\t\tWrapper for data classifying the object.\n\t\t\tCDWA Lite v1.1:no equivalent\n\t\t\tmuseumdat v1.0: objectClassificationWrap\n\t\t","objectWorkTypeWrap":"\n\t\t\tA wrapper for Object/Work Types.\n\t\t","objectWorkType":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\t\tObject Work Types are identifying the specific kind of object or work being described. For a collection, include repeating instances for identifying all of or the most important items in the collection.\n\t\t\t\t\t\tCDWA Lite v1.1: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)\n\t\t\t\t\t\tmuseumdat v1.0: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)\n\t\t\t\t\t","conceptID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n","term":"\n\t\t\tA name for a concept / term, usually from a controlled vocabulary.\n\t\t\tThe attributes are to be used as follows:pref - has allowable values:  preferred | alternate. Indicates whether it is the preferred name of the concept / term, or an alternative name.xml:lang - specifies the language of the concept / term.addedSearchTerm - has allowable values: yes | no. Default is \"no\". imported = \"yes\" means that the item includes an additional item (e.g. synonym, generic term) from the standard vocabulary used, which is included only for retrieval purposes.encodinganalog and label - used to indicate the category of data from the source system from the data values were taken. encodinganalog refers to the internal label for the external field name. The reference format is specified in lidoWrap.The attributes are optional.\n\t\t\n","@lang":"In due course, we should install the relevant ISO 2- and 3-letter\n         codes as the enumerated possible values . . .","classificationWrap":"\n\t\t\tA wrapper for classification information.\n\t\t","classification":"\n\t\t\t\t\t\tTerm used to categorize a work by grouping it together with other works on the basis of similar characteristics. The category belongs to a systematic scheme (classification) which groups objects of similar characteristics according to uniform aspects. This grouping / classification may be done according to material, form, shape, function, region of origin, cultural context, or historical or stylistic period. In addition to this systematic grouping it may also be done according to organizational divisions within a museum (e.g., according to the collection structure of a museum).If the work is assigned to multiple classifications, repeat this element.\n\t\t\t\t\t\tCDWA Lite v1.1: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)\n\t\t\t\t\t\tmuseumdat v1.0: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)\n\t\t\t\t\t","lidoWrap":"\n\t\t\tHolds one or multiple object records.\n\t\t\tThe attribute relatedencoding contains the source format for the attributes encodinganalog and label (see Object type). This may be any metadata standard like Dublin Core, but also MIDAS, KNORR or system-specific formats. This attribute is optional.\n\t\t\tCDWA Lite v1.1: cdwaliteWrap\n\t\t\tmuseumdat v1.0: museumdatWrap\n\t\t","lido":"\n\t\t\tHolds the metadata of an object.\n\t\t\tCDWA Lite v1.1: cdwalite\n\t\t\tmuseumdat v1.0: museumdat\n\t\t","lidoRecID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n\n\t\t\t\t\t\tA unique lido record identification, preferably composed of an identifier for the contributor and a record identification in the contributor's (local) system.\n\t\t\t\t\t","category":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n","descriptiveMetadata":"\n\t\t\tHolds the descriptive metadata of an object record.\n\t\t\tThe attribute xml:lang is mandatory and specifies the language of the descriptive metadata.\n\t\t\tFor fully multi-lingual resources, repeat this element once for each language represented.\n\t\t\tIf only a few data fields (e.g. title) are provided in more than one language, the respective text elements may be repeated specifying the lang attribute on the text level.\n\t\t\tCDWA Lite v1.1: descriptiveMetadata\n\t\t\tmuseumdat v1.0: descriptiveMetadata\n\t\t","objectIdentificationWrap":"\n\t\t\tA Wrapper for information that identifies the object.\n\t\t\tCDWA Lite v1.1:no equivalent\n\t\t\tmuseumdat v1.0: identificationWrap corresponds to lido:objectIdentificationWrap\n\t\t","titleWrap":"\n\t\t\tWrapper for Object name / Title information.\n\t\t\tCDWA Lite v1.1: titleWrap\n\t\t\tmuseumdat v1.0: titleWrap\n\t\t","titleSet":"\n\t\t\t\t\t\tWrapper for one title or object name and its related information. If there is more than one title, repeat the Title Set element.\n\t\t\t\t\t\tCDWA Lite v1.1: titleSet\n\t\t\t\t\t\tmuseumdat v1.0: titleSet\n\t\t\t\t\t","appellationValue":"\n\t\t\t\t\tAppellations, e.g. titles, identifying phrases, or names given to an item, but also name of a person or corporation, also place name etc.\n\t\t\t\t\tCDWA Lite v1.1: e.g. title, nameCreator, locationName correspond to lido:appellationValue\n\t\t\t\t\tmuseumdat v1.0: e.g. title, repositoryName, nameActor, nameLocation correspond to lido:appellationValue\n\t\t\t\t","sourceAppellation":"\n\t\t\t\t\tThe source for the appellation, generally a published source.\n\t\t\t\t\tCDWA Lite v1.1: e.g. sourceTitle, sourceNameCreator correspond to lido:sourceAppellation\n\t\t\t\t\tmuseumdat v1.0: e.g. sourceTitle, sourceNameActor correspond to lido:sourceAppellation\n\t\t\t\t","inscriptionsWrap":"\n\t\t\tA wrapper for information about inscriptions and other marks.\n\t\t\tCDWA Lite v1.1: inscriptionsWrap\n\t\t\tmuseumdat v1.0: inscriptionsWrap\n\t\t","inscriptions":"\n\t\t\t\t\t\tA description or transcription of any distinguishing or identifying physical lettering, annotations, texts, markings, or labels that are affixed, applied, stamped, written, inscribed, or attached to the work, excluding any mark or text inherent in the materials of which the work is made (record watermarks in Display Materials/Techniques).\n\t\t\t\t\t\tThe assigned type attribute allows to qualify text, e.g. to indicate that the text is a transcription of the inscription\n\t\t\t\t\t\tCDWA Lite v1.1: inscriptions, with a newly assigned type attribute\n\t\t\t\t\t\tmuseumdat v1.0: inscriptions, with a newly assigned type attribute\n\t\t\t\t\t","repositoryWrap":"\n\t\t\tWrapper for Repository/ Location information.\n\t\t\tCDWA Lite v1.1: locationWrap is partly corresponding lido:repositorySet\n\t\t\tmuseumdat v1.0: repositoryWrap - refined into lido:repositoryWrap (see repositoryName and repositoryLocation)\n\t\t","repositorySet":"\n\t\t\tWrapper for designation and identification of the institution of custody and, possibly, indication of the exact location of the object. If there are several designations known, e.g., a current one and former ones (see: type attribute), repeat the element.\n\t\t\tCDWA Lite v1.1: locationSet is partly a subset of lido:repositorySet\n\t\t\tmuseumdat v1.0: repositorySet - refined into lido:repositorySet (see repositoryName and repositoryLocation)\n\t\t\n","repositoryName":"\n\t\t\tReference information to a legal body\n\t\t\n\n\t\t\t\t\tUnambiguous identification, designation and weblink of the institution of custody\n\t\t\t\t\tCDWA Lite v1.1: locationName corresponds partly to lido:repositoryName\n\t\t\t\t\tmuseumdat v1.0: repositoryName - refined into lido:repositoryName\n\t\t\t\t","legalBodyID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n\n\t\t\t\t\tUnambiguous identification of the institution or person.\n\t\t\t\t","legalBodyName":"\n\t\t\tWrapper for a name of an entity, and its related information. If there is more than one name, repeat the appellation element.\n\t\t\n\n\t\t\t\t\tAppellation of the institution or person.\n\t\t\t\t","legalBodyWeblink":"\n\t\t\tA uri/url reference to a web resource that describes / represents the item, e.g. a metadata record. Note that it differs from an identifier for the item itself.\n\t\t\n\n\t\t\t\t\tWeblink of the institution or person.\n\t\t\t\t","workID":"\n\t\t\t\t\tAn unambiguous numeric or alphanumeric identification number, assigned to the object by the institution of custody.\n\t\t\t\t\tCDWA Lite v1.1: workID\n\t\t\t\t\tmuseumdat v1.0: workID\n\t\t\t\t","repositoryLocation":"\n\t\t\tStructured element for place information\n\t\t\tCDWA Lite v1.1: locationSet corresponds partly to lido:placeComplexType\n\t\t\tmuseumdat v1.0: indexingLocationWrap is refined into lido:placeComplexType\n\t\t\n\n\t\t\t\t\tLocation of the object, especially relevant for architecture and archaeological sites.\n\t\t\t\t","placeID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n","namePlaceSet":"\n\t\t\tWrapper for a name of an entity, and its related information. If there is more than one name, repeat the appellation element.\n\t\t\n\n\t\t\t\t\tThe name of the geographic place. If there are different names of the same place, e.g. today's and historical names, repeat this element.\n\t\t\t\t\tCDWA Lite v1.1: locationName corresponds partly to lido:namePlaceSet/lido:appellationComplexType\n\t\t\t\t\tmuseumdat v1.0: nameLocationSet\n\t\t\t\t","gml":"\n\t\t\t\t\tGML-conformant Content\n\t\t\t\t","Point":"\n\t\t\tA Point is defined by a single coordinate tuple.\n\t\t\n","@id":"\n\t\t\tDatabase handle for the object.  It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.  An external identifier for the object in the form of a URI may be constructed using standard XML and XPointer methods.  This is done by concatenating the URI for the document, a fragment separator, and the value of the id attribute.\n\t\t","@gid":"\n\t\t\t\t\t\tThis attribute is included for backward compatibility with GML 2 and is deprecated with GML 3. \n\t\t\t\t\t\tThis identifer is superceded by \"gml:id\" inherited from AbstractGMLType. The attribute \"gid\" should not be used \n\t\t\t\t\t\tanymore and may be deleted in future versions of GML without further notice.\n\t\t\t\t\t","@srsDimension":"\n\t\t\t\tThe \"srsDimension\" is the length of coordinate sequence (the number of entries in the list). This dimension is \n\t\t\t\tspecified by the coordinate reference system. When the srsName attribute is omitted, this attribute shall be omitted.\n\t\t\t","@srsName":"\n\t\t\t\tIn general this reference points to a CRS instance of gml:CoordinateReferenceSystemType \n\t\t\t\t(see coordinateReferenceSystems.xsd). For well known references it is not required that the CRS description exists at the \n\t\t\t\tlocation the URI points to. If no srsName attribute is given, the CRS must be specified as part of the larger context this \n\t\t\t\tgeometry element is part of, e.g. a geometric element like point, curve, etc. It is expected that this attribute will be specified \n\t\t\t\tat the direct position level only in rare cases.\n\t\t\t","@axisLabels":"\n      A set of values, representing a list of token with the lexical value space of NCName. The tokens are seperated by whitespace.\n    \n\n\t\t\t\tOrdered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis \n\t\t\t\tlabels, after spaces and forbiddden characters are removed. When the srsName attribute is included, this attribute is optional. \n\t\t\t\tWhen the srsName attribute is omitted, this attribute shall also be omitted.\n\t\t\t","@uomLabels":"\n      A set of values, representing a list of token with the lexical value space of NCName. The tokens are seperated by whitespace.\n    \n\n\t\t\t\tOrdered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the \n\t\t\t\tgml:catalogSymbol should be used for this uom labels, after spaces and forbiddden characters are removed. When the \n\t\t\t\taxisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute \n\t\t\t\tshall also be omitted.\n\t\t\t","LineString":"\n\t\t\tA LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate \n\t\t\ttuples, with linear interpolation between them. It is backwards compatible with the LineString of GML 2, GM_LineString of ISO 19107 is \n\t\t\timplemented by LineStringSegment.\n\t\t\n","Polygon":"\n\t\t\tA Polygon is a special surface that is defined by a single surface patch. The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. It is backwards compatible with the Polygon of GML 2, GM_Polygon of ISO 19107 is implemented by PolygonPatch.\n\t\t\n","partOfPlace":"\n\t\t\tStructured element for place information\n\t\t\tCDWA Lite v1.1: locationSet corresponds partly to lido:placeComplexType\n\t\t\tmuseumdat v1.0: indexingLocationWrap is refined into lido:placeComplexType\n\t\t\n\n\t\t\t\t\tAllows for indexing larger geographical entities.\n\t\t\t\t","placeClassification":"\n\t\t\t\t\tA classification of the place, e.g. by geological complex, stratigraphic unit or habitat type.\n\t\t\t\t","displayStateEditionWrap":"\n\t\t\tA wrapper for Display State Editions\n\t\t\tCDWA Lite v1.1: displayStateEditionWrap\n\t\t\tmuseumdat v1.0: displayStateEditionWrap\n\t\t","displayState":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\t\tA description of the state of the work; used primarily for prints and other multiples\n\t\t\t\t\t\tFormulated according to rules. For State, include state identification and known states, as appropriate.\n\t\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t\t\tCDWA Lite v1.1: displayState\n\t\t\t\t\t\tmuseumdat v1.0: displayState\n\t\t\t\t\t","displayEdition":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\t\tA description of the edition of the work; used primarily for prints and other multiples.\n\t\t\t\t\t\tFormulated according to rules. For Edition, include impression number, edition size, and edition number, or edition name, as appropriate.\n\t\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t\t\tCDWA Lite v1.1: displayEdition\n\t\t\t\t\t\tmuseumdat v1.0: displayEdition\n\t\t\t\t\t","sourceStateEdition":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\t\tThe published source of the state or edition information.\n\t\t\t\t\t\tCDWA Lite v1.1: sourceStateEdition\n\t\t\t\t\t\tmuseumdat v1.0: sourceStateEdition\n\t\t\t\t\t","objectDescriptionWrap":"\n\t\t\tA wrapper for Description/Descriptive Note information.\n\t\t\tCDWA Lite v1.1: descriptiveNoteWrap\n\t\t\tmuseumdat v1.0: descriptiveNoteWrap\n\t\t","objectDescriptionSet":"\n\t\t\tA wrapper for a descriptive note and its sources. If there is more than one descriptive note, repeat this set.\n\t\t\n\n\t\t\t\t\t\tA wrapper for a descriptive note and its sources. If there is more than one descriptive note, repeat this sub-element.\n\t\t\t\t\t\tIncludes usually a relatively brief essay-like text that describes the content and context of the work, including comments and an interpretation that may supplement, qualify, or explain the physical characteristics, subject, circumstances of creation or discovery, or other information about the work.\n\t\t\t\t\t\tData values for the type attribute: Object history, description, catalogue text etc.\n\t\t\t\t\t\tCDWA Lite v1.1: descriptiveNoteSet\n\t\t\t\t\t\tmuseumdat v1.0: descriptiveNoteSet\n\t\t\t\t\t","descriptiveNoteValue":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tUsually a relatively brief essay-like text that describes the entity.\n\t\t\t\t","sourceDescriptiveNote":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tThe source for the descriptive note, generally a published source.\n\t\t\t\t","objectMeasurementsWrap":"\n\t\t\tA wrapper for the Measurements.\n\t\t","objectMeasurementsSet":"\n\t\t\tWrapper for display and index elements for object measurements. If multiple parts of the work are measured, repeat the element\n\t\t\tHolds information about the dimensions, size, or scale of the work. It may also include the number of the parts of a complex work, series, or collection.\n\t\t\n","displayObjectMeasurements":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tDisplay element for one object measurement, corresponding to the following objectMeasurement element.\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t","objectMeasurements":"\n\t\t\tThe dimensions, size, shape, scale, format, or storage configuration of the work, including volume, weight, area or running time. Measurements are formatted to allow retrieval; preferably in metric units where applicable.\n\t\t\tCDWA Lite v1.1: indexingMeasurementsSet, with all sub-elements\n\t\t\tmuseumdat v1.0: indexingMeasurementsSet, with all sub-elements\n\t\t\n","measurementsSet":"\n\t\t\t\t\tThe dimensions or other measurements for one aspect of a work (e.g., width); may be combined with extent, qualifier, and other sub-elements as necessary.\n\t\t\t\t\tData values for value: Whole numbers or decimal fractions.\n\t\t\t\t\tData values for unit: cm, mm, m, g, kg, kb, Mb, Gb.\n\t\t\t\t\tData values for type: height, width, depth, length, diameter, circumference, stories, count, area, volume, running time, size, ...\n\t\t\t\t\tAll three attributes - unit, value and type - are mandatory attributes for the measurementsSet.\n\t\t\t\t","extentMeasurements":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tAn explanation of the part of the work being measured; included when necessary for clarity.\n\t\t\t\t\tData values: overall, components, sheet, plate mark, chain lines, pattern repeat, lid, base, laid lines, folios, leaves, columns per page, lines per page, tessera, footprint, panel, interior, mat, window of mat, secondary support, frame, mount, ...\n\t\t\t\t","qualifierMeasurements":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tA word or phrase that elaborates on the nature of the measurements of the work when necessary, as when the measurements are approximate.\n\t\t\t\t\tData values: approximate, sight, maximum, larges, smallest, average, variable, assembled, before restoration, before restoration, at corners, rounded, framed, with base, ...\n\t\t\t\t","formatMeasurements":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tThe configuration of a work, including technical formats, used as necessary.\n\t\t\t\t\tData values: Vignette, VHS, IMAX, DOS ...\n\t\t\t\t","shapeMeasurements":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tThe shape of a work, used for unusual shapes (e.g., an oval painting).\n\t\t\t\t\tData values: oval, round, square, rectangular, irregular, ...\n\t\t\t\t","scaleMeasurements":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tAn expression of the ratio between the size of the representation of something and that thing (e.g., the size of the drawn structure and the actual built work). Used for studies, record drawings, models, and other representations drawn or constructed to scale.\n\t\t\t\t\tData values for scale: numeric (e.g., 1 inch = 1 foot), full-size, life-size, half size,monumental. and others as recommended in CCO and CDWA. Combine this tag with Measurement Sets for numeric scales. For measurementsSet type for Scale, use \"base\" for the left side of the equation, and \"target\" for the right side of the equation).\n\t\t\t\t","eventWrap":"\n\t\t\tWrapper for event sets.\n\t\t\tCDWA Lite v1.1:no equivalent\n\t\t\tmuseumdat v1.0: eventWrap corresponds to lido:eventWrap\n\t\t","eventSet":"\n\t\t\tWrapper for display and index elements for events (e.g. creation, find, use etc.), in which the described object participated. For multiple events repeat the element.\n\t\t\n","displayEvent":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tDisplay element for an event, corresponding to the following event element.\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t","event":"\n\t\t\tComplex type for one event related with the work and its related information. If there is more than one event described, repeat the Event Set element.\n\t\t\tCDWA Lite v1.1: no equivalent\n\t\t\tmuseumdat v1.0: indexingEventSet is extended and refined into lido:eventComplexType\n\t\t\n","eventID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n","eventType":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tQualifier of the event, e.g. creation, find, ... Data values to be controlled. Recommended: Defined list of subclasses of CRM entity E5 Event.\n\t\t\t\t\tCDWA Lite v1.1: no equivalent\n\t\t\t\t\tmuseumdat v1.0: eventType is refined into lido:eventType\n\t\t\t\t","roleInEvent":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tThe role played within this event by the object being recorded.\n\t\t\t\t","eventName":"\n\t\t\tWrapper for a name of an entity, and its related information. If there is more than one name, repeat the appellation element.\n\t\t\n","eventActor":"\n\t\t\tWrapper for display and index elements for an actor with role information (participating in an event). For multiple actors repeat the element.\n\t\t\n","displayActorInRole":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tDisplay element for an actor, corresponding to the following actor element.\n\t\t\t\t\tMay include name, brief biographical information, and roles (if necessary) of the named actor, presented in a syntax suitable for display to the end-user and including any necessary indications of uncertainty, ambiguity, and nuance. If there is no known actor, make a reference to the presumed culture or nationality of the unknown actor.\n\t\t\t\t\tMay be concatenated from the respective Actor element. The name should be in natural order, if possible, although inverted order is acceptable. Include nationality and life dates. For unknown actors, use e.g.: \"unknown,\" \"unknown Chinese,\" \"Chinese,\" or \"unknown 15th century Chinese.\"\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t\tCDWA lite v1.1: displayCreator corresponds partly / is generalized into lido:displayActor\n\t\t\t\t\tmuseumdat v1.0: displayCreator corresponds partly / is generalized into lido:displayActor\n\t\t\t\t","actorInRole":"\n\t\t\tDescribes an actor with role and (if necessary) attributions related to the event the actor participated in.\n\t\t\tCDWA Lite v1.1: indexingCreatorSet is generalized into actorInRole\n\t\t\tmuseumdat v1.0: indexingActorSet\n\t\t\n","actor":"\n\t\t\tContains identifying, indexing actor information.\n\t\t\n","actorID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n","nameActorSet":"\n\t\t\tWrapper for a name of an entity, and its related information. If there is more than one name, repeat the appellation element.\n\t\t\n\n\t\t\t\t\tA wrapper for name elements, if there exists more than one name for a single actor, repeat Name Actor Set.\n\t\t\t\t\tIndicates names, appellations, or other identifiers assigned to an individual, group of people, firm or other corporate body, or other entity.\n\t\t\t\t\tCDWA Lite v1.1: nameCreatorSet is generalized into nameActorSet\n\t\t\t\t\tmuseumdat v1.0: nameActorSet\n\t\t\t\t","nationalityActor":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tNational or cultural affiliation of the person or corporate body. Controlled.\n\t\t\t\t\tCDWA Lite v1.1: nationalityCreator is generalized into nationalityActor\n\t\t\t\t\tmuseumdat v1.0: nationalityActor\n\t\t\t\t","vitalDatesActor":"\n\t\t\t\t\tA description of the lifespan of the person or the existence of the corporate body, using \"ca.\" and any other expressions of uncertainty or nuance. For Birth and Death date attributes, record years of birth and death, estimated where necessary. For a corporate body, use birthdate and deathdate to record the dates of founding and dissolution.\n\t\t\t\t\tAlthough this is not a mandatory field the use of birth date and death date is strongly recommended in the case of artists.\n\t\t\t\t\tIf only a reference period (not the exact period of life) of a person is known, and the event in which the person took part cannot be exactly dated, then the reference period should be taken as the dating of the event.\n\t\t\t\t\tCDWA Lite v1.1: vitalDatesCreator is generalized into vitalDatesActor\n\t\t\t\t\tmuseumdat v1.0: vitalDatesActor\n\t\t\t\t","genderActor":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tThe sex of the individual. Not applicable for corporate bodies.\n\t\t\t\t\tData values: male, female, unknown, not applicable.\n\t\t\t\t\tCDWA Lite v1.1: genderCreator is generalized into genderActor\n\t\t\t\t\tmuseumdat v1.0: genderActor\n\t\t\t\t","@actorType":"\n\t\t\t\tIndicates if the actor is an individual, a group of individuals or a corporation (firm or other corporate body).\n\t\t\t\tCDWA Lite v1.1: nameCreator@type is replaced by actorType (as it characterizes the actor self and not the name)\n\t\t\t\tmuseumdat v1.0: nameActor@type is replaced by actorType (as it characterizes the actor self and not the name)\n\t\t\t","roleActor":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tRole of the Actor in the event. Controlled\n\t\t\t\t\tCDWA Lite v1.1: roleCreator is generalized into roleActor\n\t\t\t\t\tmuseumdat v1.0: roleActor\n\t\t\t\t","attributionQualifierActor":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tA qualifier used when the attribution is uncertain, is in dispute, when there is more than one actor, when there is a former attribution, or when the attribution otherwise requires explanation.\n\t\t\t\t\tData values: attributed to, studio of, workshop of, atelier of, office of, assistant of, associate of, pupil of, follower of, school of, circle of, style of, after copyist of, manner of...\n\t\t\t\t\tCDWA Lite v1.1: attributionQualifierCreator is generalized into attributionQualifierActor\n\t\t\t\t\tmuseumdat v1.0: attributionQualifierActor\n\t\t\t\t","extentActor":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tExtent of the actor's participation in the event, if there are several actors.\n\t\t\t\t\tData values: design, execution, with additions by, figures, renovation by, predella, embroidery, cast by, printed by, ...\n\t\t\t\t\tCDWA Lite v1.1: extentCreator is generalized into extentActor\n\t\t\t\t\tmuseumdat v1.0: extentActor\n\t\t\t\t","culture":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tName of a culture, people, or nationality participating in the event. Controlled.\n\t\t\t\t\tCDWA Lite v1.1: culture\n\t\t\t\t\tmuseumdat v1.0: culture\n\t\t\t\t","eventDate":"\n\t\t\tWrapper for display and index elements for date information.\n\t\t\n\n\t\t\t\t\tDate specification of the event.\n\t\t\t\t","displayDate":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tDisplay element for a date specification, corresponding to the following date element.\n\t\t\t\t\tIt is a concise description of the date, presented in a syntax suitable for display to the end-user and including any necessary indications of uncertainty, ambiguity, and nuance.\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t\tCDWA lite v1.1: displayCreationDate is generalized into lido:displayDate\n\t\t\t\t\tmuseumdat v1.0: displayCreationDate is generalized into lido:displayDate\n\t\t\t\t","date":"\n\t\t\tA wrapper for date specification: This may be a period or a set of years in the proleptic Gregorian calendar delimiting the span of time. If it is an exact date, possibly with time, repeat the same date (and time) in earliest and latest dates.\n\t\t\tFormat of the data values is according to ISO 8601. This includes date and time specification.\n\t\t\tFor ca. and other uncertain or approximate dates, estimate the greatest possible span for indexing. Uncertainty should be indicated in the display element.\n\t\t\tCDWA Lite v1.1: indexingDatesSet is generalized and refined into lido:dateComplexType\n\t\t\tmuseumdat v1.0: indexingDates is refined into lido:dateComplexType\n\t\t\n","earliestDate":"\n\t\t\t\t\tA year or exact date that broadly delimits the beginning of an implied date span. Format: YYYY[-MM[-DD]]\n\t\t\t\t\tCDWA Lite v1.1: earliestDate\n\t\t\t\t\tmuseumdat v1.0: earliestDate\n\t\t\t\t","latestDate":"\n\t\t\t\t\tA year or exact date that broadly delimits the end of an implied date span. Format: YYYY[-MM[-DD]]\n\t\t\t\t\tCDWA Lite v1.1: latestDate\n\t\t\t\t\tmuseumdat v1.0: latestDate\n\t\t\t\t","periodName":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tA period defining the range of dates. Data values should be controlled.\n\t\t\t\t","eventPlace":"\n\t\t\t\t\tPlace specification of the event.\n\t\t\t\t","displayPlace":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tDisplay element for a place specification, corresponding to the following place element.\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t","place":"\n\t\t\tStructured element for place information\n\t\t\tCDWA Lite v1.1: locationSet corresponds partly to lido:placeComplexType\n\t\t\tmuseumdat v1.0: indexingLocationWrap is refined into lido:placeComplexType\n\t\t\n","eventMethod":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tThe method by which the event is carried out. Used e.g. for SPECTRUM Units of Information \"field collection method\", \"acquisition method\".\n\t\t\t\t","eventMaterialsTech":"\n\t\t\tWrapper for display and index elements for materials and technique information.\n\t\t\tIndicates the substances or materials used, as well as any implements, production or manufacturing techniques, processes, or methods incorporated.\n\t\t\n\n\t\t\t\t\tIndicates the substances or materials used within the event (e.g. the creation of a work), as well as any implements, production or manufacturing techniques, processes, or methods incorporated.\n\t\t\t\t","displayMaterialsTech":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tDisplay element for materials/technique, corresponding to the following materialsTech-Element.\n\t\t\t\t\tIt is presented in a syntax suitable for display to the end-user and including any necessary indications of uncertainty, ambiguity, and nuance.\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t","materialsTech":"\n\t\t\tMaterials and techniques for retrieval; if multiple parts of the work require separate materials and techniques, or if you are recording media and support separately, repeat the materialsTechSet element qualifying the extent sub-element.\n\t\t\n","termMaterialsTech":"\n\t\t\t\t\tA term to index materials and/or technique.\n\t\t\t\t\tData values for Type-Attribut: technique, material, implement, mark (e.g., watermark or other mark inherent in the material)\n\t\t\t\t","extentMaterialsTech":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tAn explanation of the part of the work to which the materials or technique are applicable; included when necessary for clarity.\n\t\t\t\t","sourceMaterialsTech":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tThe source of the information about materials and technique, often used when citing a published source of watermarks.\n\t\t\t\t","thingPresent":"\n\t\t\tWrapper for display and reference elements for an other object.\n\t\t\n\n\t\t\t\t\tReferences an other object that was present at this same event.\n\t\t\t\t","displayObject":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tA free-text description of the object, corresponding to the following object element\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t","object":"\n\t\t\tReference to an object.\n\t\t\n","objectWebResource":"\n\t\t\tA uri/url reference to a web resource that describes / represents the item, e.g. a metadata record. Note that it differs from an identifier for the item itself.\n\t\t\n\n\t\t\t\t\tA Uri/Url-Reference representing the object in the worldwide web environment.\n\t\t\t\t\tCDWA Lite v1.1: linkRelatedWork\n\t\t\t\t\tmuseumdat v1.0: linkRelatedWork\n\t\t\t\t","objectID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n\n\t\t\t\t\tUnique identifier of the referenced object.\n\t\t\t\t\tCDWA Lite v1.1: locRelatedWork@relWorkID corresponds to lido:objectID\n\t\t\t\t\tmuseumdat v1.0: locRelatedWork@relWorkID corresponds to lido:objectID\n\t\t\t\t","objectNote":"\n\t\t\t\t\tA descriptive identification of the object that will be meaningful to end-users, including some or all of the following information, as necessary for clarity and if known: title, object/work type, important actor, date and/or place information, potentially location of the object.\n\t\t\t\t\tThe information should ideally be generated from fields/elements in the related record.\n\t\t\t\t\tCDWA Lite v1.1: labelRelatedWork\n\t\t\t\t\tmuseumdat v1.0: labelRelatedWork\n\t\t\t\t","relatedEventSet":"\n\t\t\tA wrapper for one event related to the described event.\n\t\t\n\n\t\t\t\t\tAn event which is linked in some way to this event, e.g. a field trip within which this object was collected.\n\t\t\t\t","relatedEvent":"\n\t\t\tWrapper for display and index elements for events (e.g. creation, find, use etc.), in which the described object participated. For multiple events repeat the element.\n\t\t\n","relatedEventRelType":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tA term describing the nature of the relationship between the described event and the related event.\n\t\t\t\t\tRecommended data values: sub-event of, ... The default is \"related to\".\n\t\t\t\t\tNote: For implementation of the data: Note that relationships are conceptually reciprocal, but the Relationship Type is often different on either side of the relationship.\n\t\t\t\t","eventDescriptionSet":"\n\t\t\tA wrapper for a descriptive note and its sources. If there is more than one descriptive note, repeat this set.\n\t\t\n\n\t\t\t\t\tA description of the event.\n\t\t\t\t","objectRelationWrap":"\n\t\t\tWrapper for indexing related topics and works, collections, etc.\n\t\t\tCDWA Lite v1.1:no equivalent\n\t\t\tmuseumdat v1.0: relationWrap corresponds to lido:objectRelationWrap\n\t\t","subjectWrap":"\n\t\t\tA wrapper for Subject information.\n\t\t","subjectSet":"\n\t\t\tA single set of subject indexing information, together with its textual equivalent.\n\t\t\n","displaySubject":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tA free-text description of the subject matter represented by/in the object, corresponding to the following subject element\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t","subject":"\n\t\t\tA wrapper for one set of Subject Indexing information. These identify, describe, and/or interpret what is depicted in and by a work or what the work is about. If a work has multiple parts or otherwise has separate, multiple subjects, repeat this element with Extent Subject. This element may also be repeated to distinguish between subjects that reflect what a work is *of* (description and identification) from what it is *about* (interpretation).\n\t\t\tWhile not required, it is highly recommended to include subject information, even for non-objective art, for which the function or purpose of the work may be included as subject.\n\t\t\tCDWA Lite v1.1: indexingSubjectSet, but refined\n\t\t\tmuseumdat v1.0: indexingSubjectSet, but refined\n\t\t\n","extentSubject":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tWhen there are multiple subjects, a term indicating the part of the work to which these subject terms apply.\n\t\t\t\t\tData values: recto, verso, side A, side B, main panel, predella, ...\n\t\t\t\t\tCDWA Lite v1.1: extentSubject\n\t\t\t\t\tmuseumdat v1.0: extentSubject\n\t\t\t\t","subjectConcept":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tSubject terms - these may include iconography, themes from literature, or generic terms describing the material world, or topics (e.g., concepts, themes, or issues). However, references to people, events, places are indicated in the the respective sub-elements Subject: Actor, Subject: Event, Subject: Place.\n\t\t\t\t\tData values should be controlled, e.g. Iconclass, AAT, museumsvokabular.de, SWD.\n\t\t\t\t\tCDWA Lite v1.1: subjectTerm, but restricted to concepts - cf. new sub-elements subjectActor, subjectEvent, subjectPlace\n\t\t\t\t\tmuseumdat v1.0: subjectTerm, but restricted to concepts - cf. new sub-elements subjectActor, subjectEvent, subjectPlace\n\t\t\t\t","subjectActor":"\n\t\t\tWrapper for display and index elements for an actor. For multiple actors repeat this element.\n\t\t\n\n\t\t\t\t\tA person, group, or institution depicted in or by an object, or the object is about.\n\t\t\t\t","displayActor":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tDisplay element for an actor, corresponding to the following actor element.\n\t\t\t\t\tMay include name, brief biographical information of the named actor, presented in a syntax suitable for display to the end-user. If there is no known actor, make a reference to the presumed culture or nationality of the unknown actor.\n\t\t\t\t\tMay be concatenated from the respective Actor element. The name should be in natural order, if possible, although inverted order is acceptable. Include nationality and life dates. For unknown actors, use e.g.: \"unknown,\" \"unknown Chinese,\" \"Chinese,\" or \"unknown 15th century Chinese.\"\n\t\t\t\t\tRepeat this element only for language variants!\n\t\t\t\t\tCDWA lite v1.1: displayCreator corresponds partly to lido:displayActor (without role information)\n\t\t\t\t\tmuseumdat v1.0: displayCreator corresponds partly to lido:displayActor (without role information)\n\t\t\t\t","subjectDate":"\n\t\t\tWrapper for display and index elements for date information.\n\t\t\n\n\t\t\t\t\tA time specification or period depicted in or by an object, or the object is about.\n\t\t\t\t","subjectEvent":"\n\t\t\tWrapper for display and index elements for events (e.g. creation, find, use etc.), in which the described object participated. For multiple events repeat the element.\n\t\t\n\n\t\t\t\t\tAn event depicted in or by an object, or the object is about.\n\t\t\t\t","subjectPlace":"\n\t\t\tWrapper for display and index elements for place information.\n\t\t\n\n\t\t\t\t\tA place depicted in or by an object, or the object is about.\n\t\t\t\t","subjectObject":"\n\t\t\tWrapper for display and reference elements for an other object.\n\t\t\n\n\t\t\t\t\tAn object - e.g. a building or a work of art depicted in or by an object, or the object is about.\n\t\t\t\t","relatedWorksWrap":"\n\t\t\tA wrapper for Related Works information.\n\t\t","relatedWorksSet":"\n\t\t\tA wrapper for one work, group, collection, or series that is directly related to the work at hand, including direct relationships between two works, between a work and its components, and between an item and the larger group, collection, or series of works. Objects referred to may be corresponding objects or objects created to be shown together with the object in question, but also e.g., literature (bibliographic objects) in which the object is documented or mentioned forms a \"relatedWorkSet\". If there is more than one object referred to the set should be repeated.\n\t\t\n","relatedWork":"\n\t\t\tWrapper for display and reference elements for an other object.\n\t\t\n","relatedWorkRelType":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tA term describing the nature of the relationship between the work at hand and the related entity.\n\t\t\t\t\tRecommended data values: part of, larger context for, model of, model for, study of, study forrendering of, copy of, ... The default is \"related to\".\n\t\t\t\t\tNote: For implementation of the data: Note that relationships are conceptually reciprocal, but the Relationship Type is often different on either side of the relationship (e.g., one work is part of a second work, but from the point of view of the second record, the first work is the larger context for the second work). Whether or not relationships are physically reciprocal as implemented in systems is a local decision.\n\t\t\t\t","administrativeMetadata":"\n\t\t\tHolds the administrative metadata of an object record.\n\t\t\tThe attribute xml:lang is mandatory and specifies the language of the administrative metadata.\n\t\t\tFor fully multi-lingual resources, repeat this element once for each language represented.\n\t\t\tIf only a few data fields (e.g. creditline) are provided in more than one language, the respective text elements may be repeated specifying the lang attribute on the text level.\n\t\t\tCDWA Lite v1.1: administrativeMetadata\n\t\t\tmuseumdat v1.0: administrativeMetadata\n\t\t","rightsWorkWrap":"\n\t\t\tWrapper for rights information.\n\t\t\tCDWA Lite v1.1: no equivalent (cdwalite:rightsWork is not wrapped)\n\t\t\tmuseumdat v1.0: no equivalent (museumdat:rightsWork is not wrapped)\n\t\t","rightsWorkSet":"\n\t\t\tInformation about rights management; may include copyright and other intellectual property statements.\n\t\t\n\n\t\t\t\t\t\tInformation about rights management; may include copyright and other intellectual property statements required for use of the metadata.\n\t\t\t\t\t\tCDWA Lite v1.1: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rightsComplexType\n\t\t\t\t\t\tmuseumdat v1.0: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rightsComplexType\n\t\t\t\t\t","rightsType":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tThe specific type of right being recorded. For example: copyright, publication right, data protection right, trademark.\n\t\t\t\t","rightsDate":"\n\t\t\tA wrapper for date specification: This may be a period or a set of years in the proleptic Gregorian calendar delimiting the span of time. If it is an exact date, possibly with time, repeat the same date (and time) in earliest and latest dates.\n\t\t\tFormat of the data values is according to ISO 8601. This includes date and time specification.\n\t\t\tFor ca. and other uncertain or approximate dates, estimate the greatest possible span for indexing. Uncertainty should be indicated in the display element.\n\t\t\tCDWA Lite v1.1: indexingDatesSet is generalized and refined into lido:dateComplexType\n\t\t\tmuseumdat v1.0: indexingDates is refined into lido:dateComplexType\n\t\t\n\n\t\t\t\t\tThe date on which a right is or was current.\n\t\t\t\t","rightsHolder":"\n\t\t\tReference information to a legal body\n\t\t\n\n\t\t\t\t\tThe holder of the right.\n\t\t\t\t","creditLine":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tAcknowledgement of the rights associated with the physical and/or digital object.\n\t\t\t\t\tRepeat this element only for language variants.\n\t\t\t\t","recordWrap":"\n\t\t\tA wrapper for information about the record that contains the cataloguing information.\n\t\t\tCDWA Lite v1.1: recordWrap\n\t\t\tmuseumdat v1.0: recordWrap\n\t\t","recordID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n\n\t\t\t\t\t\tA unique record identification in the contributor's (local) system.\n\t\t\t\t\t","recordType":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\t\tTerm establishing whether the record represents an individual item or a collection, series, or group of works.\n\t\t\t\t\t\tIt is required to designate the Record type. The default is item. Other data values: collection, series, group, volume, fonds,\n\t\t\t\t\t","recordSource":"\n\t\t\tReference information to a legal body\n\t\t\n\n\t\t\t\t\t\tThe source of information in this record, generally the repository or other institution.\n\t\t\t\t\t","recordRights":"\n\t\t\tInformation about rights management; may include copyright and other intellectual property statements.\n\t\t\n\n\t\t\t\t\t\tInformation about rights regarding the metadata provided in this record.\n\t\t\t\t\t","recordInfoSet":"\n\t\t\tWrapper for metadata information about this record.\n\t\t\tNote: The metadata information contains the reference to the \"lido\"-metadata set but may also be constituted by reference to an \"object data sheet\" in an online database.\n\t\t\tCDWA Lite v1.1: recordInfoWrap\n\t\t\tmuseumdat v1.0: recordInfoSet\n\t\t\n","recordInfoID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n\n\t\t\t\t\tUnique ID of the metadata. Record Info ID has the same definition as Record ID but out of the context of original local system, such as a persistent identifier or an oai identifier (e.g., oai1:getty.edu:paintings/00001234 attribute type= oai).\n\t\t\t\t","recordInfoLink":"\n\t\t\tA uri/url reference to a web resource that describes / represents the item, e.g. a metadata record. Note that it differs from an identifier for the item itself.\n\t\t\n\n\t\t\t\t\tLink of the metadata, e.g., to the object data sheet (not the same as link of the object).\n\t\t\t\t","recordRelID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n\n\t\t\t\t\tUnique ID of the metadata of the related object.\n\t\t\t\t","recordMetadataLoc":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\tPointer(s) to other metadata (administrative, technical, structural).\n\t\t\t\t","recordMetadataDate":"\n\t\t\t\t\tCreation date or date modified of the metadata record. Format will vary depending upon implementation.\n\t\t\t\t","resourceWrap":"\n\t\t\tA wrapper for image information. An identification of an image (visual surrogate) of the work, including digital images, slides, transparencies, photographs, and moving images, but excluding items that are considered works in their own right. For works such as drawings, prints, paintings, or photographs considered art, and other works that themselves contain representations of other works, use Related Works and/or Subjects.\n\t\t\tCDWA Lite v1.1: resourceWrap\n\t\t\tmuseumdat v1.0: resourceWrap\n\t\t","resourceSet":"\n\t\t\tA wrapper for sets of resource information. If there are multiple resources associated with the work, repeat the Resource Set sub-element.\n\t\t\tCDWA Lite v1.1: resourceSet\n\t\t\tmuseumdat v1.0: resourceSet\n\t\t\n","linkResource":"\n\t\t\t\t\tA uri/url reference that is universal in the worldwide web environment.\n\t\t\t\t","resourceID":"\n\t\t\tThere is no controlled list of identifier types. Suggested values include, but are not limited to the following:doi (Digital Objects Identifier)guid (Globally unique identifier)hdl (Handle)isbn (International Standard Book Number)ismn (International Standard Music Number)isrc (International Standard Recording Code)issn (International Standard Serials Number)localpermalinkpurl (Persistent Uniform Resource Locator)url (Uniform Resource Locator)urn (Uniform Resource Name)\n\t\t\n\n\t\t\t\t\tThe unique numeric or alphanumeric identification of the resource.\n\t\t\t\t","resourceRelType":"\n\t\t\t\t\tThe relationship of an image or other resource to the work being described.\n\t\t\t\t\tData values: conservation image, documentary image, contextual image, historical image, reconstruction, installation image...\n\t\t\t\t","resourceType":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tThe generic identification of the medium of the image or other resource.\n\t\t\t\t\tData values: Controlled. Digital image, photograph, slide, videotape, X-ray photograph, negative,\n\t\t\t\t","rightsResource":"\n\t\t\tInformation about rights management; may include copyright and other intellectual property statements.\n\t\t\n\n\t\t\t\t\tInformation about rights regarding the image or other resource. Use this sub-element if the holder of the reproduction rights for the image/resource differs from the holder of rights for the work. See also Rights Work above. (E.g., the work rights are \" National Museum of African Art, Smithsonian Instituition (Washing DC), \" but the image rights are \"Photo Frank Khoury.\")\n\t\t\t\t","resourceViewDescription":"\n\t\t\t\t\tA description of the spatial, chronological, or contextual aspects of the work as captured in the view of this particular image or other resource.\n\t\t\t\t","resourceViewType":"\n\t\t\tSet for identifiers and terms of a concept.\n\t\t\n\n\t\t\t\t\tThe specific vantage point or perspective of the view.\n\t\t\t\t","resourceViewSubjectTerm":"\n\t\t\t\t\tTerms or phrases that characterize the subject matter of the work as it is depicted in a specific image or other resource.\n\t\t\t\t\tData values: Controlled. E.g., IconClass, museumsvokabular.de, SWD, AAT\n\t\t\t\t\tRecommended values for type attribute: conceptTerm, iconography, eventName, personalName, corporateBodyName, geographicName\n\t\t\t\t","resourceViewDate":"\n\t\t\t\t\tA date or range of dates associated with the creation or production of the image. This is not necessarily the same as the date of production of the resource (e.g., a print of a negative may be made years after the image was first captured on film). For the date of the resource, use Resource Date. Format will vary depending upon implementation.\n\t\t\t\t","resourceSource":"\n\t\t\t\t\tIdentification of the agency, individual, repository, or publication from which the image or other resource was obtained, including a bibliographic citation in the case of copy photography. Include this sub-element when the source of the image/resource differs from the source named in Record Source.\n\t\t\t\t","linkRelatedResource":"\n\t\t\t\t\tA reference to an image or other resource that is related to the resource in this Resource Set, generally linking a group or collection of images or other resources to members of the group or collection. For multiple related resources, repeat this element.\n\t\t\t\t","relatedResourceRelType":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\t\t\t\tA term describing the nature of the relationship between the resource at hand and the related resource.\n\t\t\t\t\t\t\t\tRecommended values: part of, larger context for, related to, ...\n\t\t\t\t\t\t\t","labelRelatedResource":"\n\t\t\tSimple text element with encodinganalog and label attribute\n\t\t\n\n\t\t\t\t\t\t\t\tAn identification of the related image or other resource that will be meaningful to end-users.\n\t\t\t\t\t\t\t","resourceMetadataLoc":"\n\t\t\t\t\tPointer(s) to other metadata (administrative, technical, structural).\n\t\t\t\t","_reference":"\n\t\t\tA pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.\n\t\t\n","@remoteSchema":"\n\t\t\tReference to an XML Schema fragment that specifies the content model of the propertys value. This is in conformance with the XML Schema Section 4.14 Referencing Schemas from Elsewhere.\n\t\t","@actuate":"\n\t\t\t\n        The 'actuate' attribute is used to communicate the desired timing \n        of traversal from the starting resource to the ending resource; \n        it's value should be treated as follows:\n        onLoad - traverse to the ending resource immediately on loading \n                 the starting resource \n        onRequest - traverse from the starting resource to the ending \n                    resource only on a post-loading event triggered for \n                    this purpose \n        other - behavior is unconstrained; examine other markup in link \n                for hints \n        none - behavior is unconstrained\n      \n\t\t","@show":"\n\t\t\t\n        The 'show' attribute is used to communicate the desired presentation \n        of the ending resource on traversal from the starting resource; it's \n        value should be treated as follows: \n        new - load ending resource in a new window, frame, pane, or other \n              presentation context\n        replace - load the resource in the same window, frame, pane, or \n                  other presentation context\n        embed - load ending resource in place of the presentation of the \n                starting resource\n        other - behavior is unconstrained; examine other markup in the \n                link for hints \n        none - behavior is unconstrained \n      \n\t\t","interior":"\n\t\t\tEncapsulates a ring to represent the surface boundary property of a surface.\n\t\t\n\n\t\t\tA boundary of a surface consists of a number of rings. The \"interior\" rings seperate the surface / surface patch from the area enclosed by the rings.\n\t\t","_Ring":"\n\t\t\tAn abstraction of a ring to support surface boundaries of different complexity.\n\t\t\n\n\t\t\tThe \"_Ring\" element is the abstract head of the substituition group for all closed boundaries of a surface patch.\n\t\t","FeatureCollection":"\n\t\t\tConcrete generic feature collection.\n\t\t\n","featureProperty":"\n\t\t\tContainer for a feature - follow gml:AssociationType pattern.\n\t\t\n","_Feature":"\n\t\t\tAn abstract feature provides a set of common properties, including id, metaDataProperty, name and description inherited from AbstractGMLType, plus boundedBy.    A concrete feature type must derive from this type and specify additional  properties in an application schema. A feature must possess an identifying attribute ('id' - 'fid' has been deprecated).\n\t\t\n","_TimePrimitive":"\n\t\t\tThe abstract supertype for temporal primitives.\n\t\t\n\n\t\t\tThis abstract element acts as the head of the substitution group for temporal primitives.\n\t\t","lineStringProperty":"\n\t\t\tThis type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use \n\t\t\tCurvePropertyType instead. A property that has a line string as its value domain can either be an appropriate geometry element encapsulated \n\t\t\tin an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere \n\t\t\tin the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n\n\t\t\tDeprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use \"curveProperty\" instead. This \n\t\t\tproperty element either references a line string via the XLink-attributes or contains the line string element.\n\t\t","timePosition":"\n\t\t\tDirect representation of a temporal position. \n      Indeterminate time values are also allowed, as described in ISO 19108. The indeterminatePosition \n      attribute can be used alone or it can qualify a specific value for temporal position (e.g. before \n      2002-12, after 1019624400). \n      For time values that identify position within a calendar, the calendarEraName attribute provides \n      the name of the calendar era to which the date is referenced (e.g. the Meiji era of the Japanese calendar).\n\t\t\n\n\t\t\tDirect representation of a temporal position\n\t\t","@indeterminatePosition":"\n\t\t\tThis enumerated data type specifies values for indeterminate positions.\n\t\t\n","location":"\n\t\t\tConvenience property for generalised location.  \n      A representative location for plotting or analysis.  \n      Often augmented by one or more additional geometry properties with more specific semantics.\n\t\t\tDeprecated in GML 3.1.0\n\t\t\n\n\t\t\tDeprecated in GML 3.1.0\n\t\t","exterior":"\n\t\t\tEncapsulates a ring to represent the surface boundary property of a surface.\n\t\t\n\n\t\t\tA boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.\n\t\t","LinearRing":"\n\t\t\tA LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates must be coincident.\n\t\t\n","Array":"\n\t\t\tA non-abstract generic collection type that can be used as a document element for a homogeneous collection of any GML types - Geometries, Topologies, Features ...\n\t\t\n\n\t\t\tGeneric GML element to contain a homogeneous array of GML _Objects\n\t\t","innerBoundaryIs":"\n\t\t\tEncapsulates a ring to represent the surface boundary property of a surface.\n\t\t\n\n\t\t\tDeprecated with GML 3.0, included only for backwards compatibility with GML 2. Use \"interior\" instead.\n\t\t","pos":"\n\t\t\tDirectPosition instances hold the coordinates for a position within some coordinate reference system (CRS). Since \n\t\t\tDirectPositions, as data types, will often be included in larger objects (such as geometry elements) that have references to CRS, the \n\t\t\t\"srsName\" attribute will in general be missing, if this particular DirectPosition is included in a larger element with such a reference to a \n\t\t\tCRS. In this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t","DefinitionCollection":"\n\t\t\tA non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional \"description\" element can be used for a description of this dictionary. The inherited optional \"name\" element can be used for the name(s) of this dictionary. The inherited \"metaDataProperty\" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. \n\t\t\n","coord":"\n\t\t\tRepresents a coordinate tuple in one, two, or three dimensions. Deprecated with GML 3.0 and replaced by \n\t\t\tDirectPositionType.\n\t\t\n\n\t\t\tDeprecated with GML 3.0 and included for backwards compatibility with GML 2. Use the \"pos\" element instead.\n\t\t","ConventionalUnit":"\n\t\t\tDefinition of a unit of measure which is related to a preferred unit for this quantity type through a conversion formula.  A method for deriving this unit by algebraic combination of more primitive units, may also be provided.\n\t\t\n","description":"\n\t\t\tThis type is available wherever there is a need for a \"text\" type property. It is of string type, so the text can be included inline, but the value can also be referenced remotely via xlinks from the AssociationAttributeGroup. If the remote reference is present, then the value obtained by traversing the link should be used, and the string content of the element can be used for an annotation.\n\t\t\n\n\t\t\tContains a simple text description of the object, or refers to an external description.\n\t\t","GenericMetaData":"\n\t\t\tDeprecated with GML version 3.1.0.\n\t\t\n\n\t\t\tConcrete element in the _MetaData substitution group, which permits any well-formed XML content.  Intended to act as a container for metadata defined in external schemas, for which it is not possible to add the concrete components to the GML _MetaData substitution group directly. Deprecated with GML version 3.1.0.\n\t\t","unitOfMeasure":"\n\t\t\tReference to a unit of measure definition that applies to all the numerical values described by the element containing this element. Notice that a complexType which needs to include the uom attribute can do so by extending this complexType. Alternately, this complexType can be used as a pattern for a new complexType.\n\t\t\n","@uom":"\n\t\t\t\tReference to a unit of measure definition, usually within the same XML document but possibly outside the XML document which contains this reference. For a reference within the same XML document, the \"#\" symbol should be used, followed by a text abbreviation of the unit name. However, the \"#\" symbol may be optional, and still may be interpreted as a reference.\n\t\t\t","definitionMember":"\n\t\t\tAn entry in a dictionary of definitions. An instance of this type contains or refers to a definition object.  \n\nThe number of definitions contained in this dictionaryEntry is restricted to one, but a DefinitionCollection or Dictionary that contains multiple definitions can be substituted if needed. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. \n\t\t\n","Definition":"\n\t\t\tA definition, which can be included in or referenced by a dictionary. In this extended type, the inherited \"description\" optional element can hold the definition whenever only text is needed. The inherited \"name\" elements can provide one or more brief terms for which this is the definition. The inherited \"metaDataProperty\" elements can be used to reference or include more information about this definition.  \nThe gml:id attribute is required - it must be possible to reference this definition using this handle.  \n\t\t\n","metaDataProperty":"\n\t\t\tBase type for complex metadata property types.\n\t\t\n\n\t\t\tContains or refers to a metadata package that contains metadata properties.\n\t\t","name":"\n      Name or code with an (optional) authority.  Text token.  \n      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus \n      or authority for the term, such as the organisation who assigned the value, \n      or the dictionary from which it is taken.  \n      A text string with an optional codeSpace attribute. \n    \n\n\t\t\tLabel for the object, normally a descriptive name. An object may have several names, typically assigned by different authorities.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.\n\t\t","surfaceArrayProperty":"\n\t\t\tA container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements is not supported.\n\t\t\n","_Surface":"\n\t\t\tAn abstraction of a surface to support the different levels of complexity. A surface is always a continuous region of a plane.\n\t\t\n\n\t\t\tThe \"_Surface\" element is the abstract head of the substituition group for all (continuous) surface elements.\n\t\t","curveProperty":"\n\t\t\tA property that has a curve as its value domain can either be an appropriate geometry element encapsulated in an \n\t\t\telement of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere \n\t\t\tin the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\tThis property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the \n\t\t\tpredefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is \n\t\t\tsubstitutable for _Curve.\n\t\t","_Curve":"\n\t\t\tAn abstraction of a curve to support the different levels of complexity. The curve can always be viewed as a geometric \n\t\t\tprimitive, i.e. is continuous.\n\t\t\n\n\t\t\tThe \"_Curve\" element is the abstract head of the substituition group for all (continuous) curve elements.\n\t\t","dictionaryEntry":"\n\t\t\tAn entry in a dictionary of definitions. An instance of this type contains or refers to a definition object.  \n\nThe number of definitions contained in this dictionaryEntry is restricted to one, but a DefinitionCollection or Dictionary that contains multiple definitions can be substituted if needed. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. \n\t\t\n","LocationKeyWord":"\n      Name or code with an (optional) authority.  Text token.  \n      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus \n      or authority for the term, such as the organisation who assigned the value, \n      or the dictionary from which it is taken.  \n      A text string with an optional codeSpace attribute. \n    \n","roughConversionToPreferredUnit":"\n\t\t\tRelation of a unit to the preferred unit for this quantity type, specified by an arithmetic conversion (scaling and/or offset). A preferred unit is either a base unit or a derived unit selected for all units of one quantity type. The mandatory attribute \"uom\" shall reference the preferred unit that this conversion applies to. The conversion is specified by one of two alternative elements: \"factor\" or \"formula\".\n\t\t\n\n\t\t\tThis element is included when the correct definition of this unit is unknown, but this unit has a rough or inaccurate conversion to the preferred unit for this quantity type.\n\t\t","UnitDefinition":"\n\t\t\tDefinition of a unit of measure (or uom). The definition includes a quantityType property, which indicates the phenomenon to which the units apply, and a catalogSymbol, which gives the short symbol used for this unit. This element is used when the relationship of this unit to other units or units systems is unknown.\n\t\t\n","edgeOf":"\n\t\t\tA property that has a curve as its value domain can either be an appropriate geometry element encapsulated in an \n\t\t\telement of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere \n\t\t\tin the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n","outerBoundaryIs":"\n\t\t\tEncapsulates a ring to represent the surface boundary property of a surface.\n\t\t\n\n\t\t\tDeprecated with GML 3.0, included only for backwards compatibility with GML 2. Use \"exterior\" instead.\n\t\t","_GeometricPrimitive":"\n\t\t\tThis is the abstract root type of the geometric primitives. A geometric primitive is a geometric object that is not \n\t\t\tdecomposed further into other primitives in the system. All primitives are oriented in the direction implied by the sequence of their \n\t\t\tcoordinate tuples.\n\t\t\n\n\t\t\tThe \"_GeometricPrimitive\" element is the abstract head of the substituition group for all (pre- and user-defined) \n\t\t\tgeometric primitives.\n\t\t","boundedBy":"\n\t\t\tBounding shape.\n\t\t\n","_GML":"\n\t\t\tAll complexContent GML elements are directly or indirectly derived from this abstract supertype \n\tto establish a hierarchy of GML types that may be distinguished from other XML types by their ancestry. \n\tElements in this hierarchy may have an ID and are thus referenceable.\n\t\t\n\n\t\t\tGlobal element which acts as the head of a substitution group that may include any element which is a GML feature, object, geometry or complex value\n\t\t","indirectEntry":"\n\t\t\tAn entry in a dictionary of definitions that contains a GML object which references a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. Specialized descendents of this dictionaryEntry might be restricted in an application schema to allow only including specified types of definitions as valid entries in a dictionary. \n\t\t\n","DefinitionProxy":"\n\t\t\tA proxy entry in a dictionary of definitions. An element of this type contains a reference to a remote definition object. This entry is expected to be convenient in allowing multiple elements in one XML document to contain short (abbreviated XPointer) references, which are resolved to an external definition provided in a Dictionary element in the same XML document. \n\t\t\n","_FeatureCollection":"\n\t\t\tA feature collection contains zero or more features.\n\t\t\n","Null":"\n      Utility type for null elements.  The value may be selected from one of the enumerated tokens, or may be a URI in which case this should identify a resource which describes the reason for the null. \n    \n","pointProperty":"\n\t\t\tA property that has a point as its value domain can either be an appropriate geometry element encapsulated in an \n\t\t\telement of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located \n\t\t\telsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\tThis property element either references a point via the XLink-attributes or contains the point element. pointProperty \n\t\t\tis the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that \n\t\t\tis substitutable for Point.\n\t\t","position":"\n\t\t\tA property that has a point as its value domain can either be an appropriate geometry element encapsulated in an \n\t\t\telement of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located \n\t\t\telsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n","Bag":"\n\t\t\tA non-abstract generic collection type that can be used as a document element for a collection of any GML types - Geometries, Topologies, Features ...\n\nFeatureCollections may only contain Features.  GeometryCollections may only contain Geometrys.  Bags are less constrained  they must contain objects that are substitutable for gml:_Object.  This may mix several levels, including Features, Definitions, Dictionaries, Geometries etc.  \n\nThe content model would ideally be \n   member 0..*\n   members 0..1\n   member 0..*\nfor maximum flexibility in building a collection from both homogeneous and distinct components: \nincluded \"member\" elements each contain a single Object\nan included \"members\" element contains a set of Objects \n\nHowever, this is non-deterministic, thus prohibited by XSD.\n\t\t\n\n\t\t\tGeneric GML element to contain a heterogeneous collection of GML _Objects\n\t\t","dmsAngle":"\n\t\t\tAngle value provided in degree-minute-second or degree-minute format.\n\t\t\n","degrees":"\n\t\t\tInteger number of degrees, plus the angle direction. This element can be used for geographic Latitude and Longitude. For Latitude, the XML attribute direction can take the values \"N\" or \"S\", meaning North or South of the equator. For Longitude, direction can take the values \"E\" or \"W\", meaning East or West of the prime meridian. This element can also be used for other angles. In that case, the direction can take the values \"+\" or \"-\" (of SignType), in the specified rotational direction from a specified reference direction.\n\t\t\n","measure":"\n      Number with a scale.  \n      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. \n    \n","centerLineOf":"\n\t\t\tA property that has a curve as its value domain can either be an appropriate geometry element encapsulated in an \n\t\t\telement of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere \n\t\t\tin the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n","conversionToPreferredUnit":"\n\t\t\tRelation of a unit to the preferred unit for this quantity type, specified by an arithmetic conversion (scaling and/or offset). A preferred unit is either a base unit or a derived unit selected for all units of one quantity type. The mandatory attribute \"uom\" shall reference the preferred unit that this conversion applies to. The conversion is specified by one of two alternative elements: \"factor\" or \"formula\".\n\t\t\n\n\t\t\tThis element is included when this unit has an accurate conversion to the preferred unit for this quantity type.\n\t\t","pointArrayProperty":"\n\t\t\tA container for an array of points. The elements are always contained in the array property, referencing geometry \n\t\t\telements or arrays of geometry elements is not supported.\n\t\t\n","_TimeGeometricPrimitive":"\n\t\t\tThe abstract supertype for temporal geometric primitives.\n       A temporal geometry must be associated with a temporal reference system via URI. \n       The Gregorian calendar with UTC is the default reference system, following ISO \n       8601. Other reference systems in common use include the GPS calendar and the \n       Julian calendar.\n\t\t\n\n\t\t\tThis abstract element acts as the head of the substitution group for temporal geometric primitives.\n\t\t","_Geometry":"\n\t\t\tAll geometry elements are derived directly or indirectly from this abstract supertype. A geometry element may \n\t\t\thave an identifying attribute (\"gml:id\"), a name (attribute \"name\") and a description (attribute \"description\"). It may be associated \n\t\t\twith a spatial reference system (attribute \"srsName\"). The following rules shall be adhered: - Every geometry type shall derive \n\t\t\tfrom this abstract type. - Every geometry element (i.e. an element of a geometry type) shall be directly or indirectly in the \n\t\t\tsubstitution group of _Geometry.\n\t\t\n\n\t\t\tThe \"_Geometry\" element is the abstract head of the substituition group for all geometry elements of GML 3. This \n\t\t\tincludes pre-defined and user-defined geometry elements. Any geometry element must be a direct or indirect extension/restriction \n\t\t\tof AbstractGeometryType and must be directly or indirectly in the substitution group of \"_Geometry\".\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t","definitionRef":"\n\t\t\tA pattern or base for derived types used to specify complex types corresponding to a UML aggregation association.  An instance of this type serves as a pointer to a remote Object.\n\t\t\n","DerivedUnit":"\n\t\t\tDefinition of a unit of measure which is defined through algebraic combination of more primitive units, which are usually base units from a particular system of units. Derived units based directly on base units are usually preferred for quantities other than the base units or fundamental quantities within a system.  If a derived unit is not the preferred unit, the ConventionalUnit element should be used instead.\n\t\t\n","extentOf":"\n\t\t\tA property that has a surface as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n","TimeInstant":"\n\t\t\tOmit back-pointers begunBy, endedBy.\n\t\t\n","vector":"\n\t\t\tVector instances hold the compoents for a (usually spatial) vector within some coordinate reference system (CRS). \n\t\t\tSince Vectors will often be included in larger objects that have references to CRS, the \"srsName\" attribute may be missing. \n\t\t\tIn this case, the CRS is implicitly assumed to take on the value of the containing object's CRS.\n\n\t\t\tNote that this content model is the same as DirectPositionType, but is defined separately to reflect the distinct semantics, and to avoid validation problems. SJDC 2004-12-02\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t","catalogSymbol":"\n      Name or code with an (optional) authority.  Text token.  \n      If the codeSpace attribute is present, then its value should identify a dictionary, thesaurus \n      or authority for the term, such as the organisation who assigned the value, \n      or the dictionary from which it is taken.  \n      A text string with an optional codeSpace attribute. \n    \n\n\t\t\tFor global understanding of a unit of measure, it is often possible to reference an item in a catalog of units, using a symbol in that catalog. The \"codeSpace\" attribute in \"CodeType\" identifies a namespace for the catalog symbol value, and might reference the catalog. The \"string\" value in \"CodeType\" contains the value of a symbol that is unique within this catalog namespace. This symbol often appears explicitly in the catalog, but it could be a combination of symbols using a specified algebra of units. For example, the symbol \"cm\" might indicate that it is the \"m\" symbol combined with the \"c\" prefix.\n\t\t","Dictionary":"\n\t\t\tA non-abstract bag that is specialized for use as a dictionary which contains a set of definitions. These definitions are referenced from other places, in the same and different XML documents. In this restricted type, the inherited optional \"description\" element can be used for a description of this dictionary. The inherited optional \"name\" element can be used for the name(s) of this dictionary. The inherited \"metaDataProperty\" elements can be used to reference or contain more information about this dictionary. The inherited required gml:id attribute allows the dictionary to be referenced using this handle. \n\t\t\n","_TimeComplex":"\n\t\t\tThe abstract supertype for temporal complexes.\n\t\t\n\n\t\t\tThis abstract element acts as the head of the substitution group for temporal complexes. \n\t\t\tTemporal complex is an aggregation of temporal primitives as its components, \n\t\t\trepresents a temporal geometric complex and a temporal topology complex. \n\t\t\tN.B. Temporal geometric complex is not defined in this schema.\n\t\t","coordinates":"\n      Tables or arrays of tuples.  \n        May be used for text-encoding of values from a table.  \n        Actually just a string, but allows the user to indicate which characters are used as separators.  \n        The value of the 'cs' attribute is the separator for coordinate values, \n        and the value of the 'ts' attribute gives the tuple separator (a single space by default); \n        the default values may be changed to reflect local usage.\n        Defaults to CSV within a tuple, space between tuples.  \n        However, any string content will be schema-valid.  \n    \n\n\t\t\tDeprecated with GML version 3.1.0.\n\t\t","members":"\n\t\t\tA base for derived types used to specify complex types containing an array of objects, by unspecified UML association - either composition or aggregation.  An instance of this type contains elements representing Objects.\n\nIdeally this type would be derived by extension of AssociationType.  \nHowever, this leads to a non-deterministic content model, since both the base and the extension have minOccurs=\"0\", and is thus prohibited in XML Schema.\n\t\t\n","_Object":"\n\t\t\tThis abstract element is the head of a substitutionGroup hierararchy which may contain either simpleContent or complexContent elements.  It is used to assert the model position of \"class\" elements declared in other GML schemas.\n\t\t","_association":"\n\t\t\tA pattern or base for derived types used to specify complex types corresponding to an  unspecified UML association - either composition or aggregation.  Restricts the cardinality of Objects contained in the association to a maximum of one.  An instance of this type can contain an element representing an Object, or serve as a pointer to a remote Object.  \n\nDescendents of this type can be restricted in an application schema to \n* allow only specified classes as valid participants in the aggregation\n* allow only association by reference (i.e. empty the content model) or by value (i.e. remove the xlinks).    \n\nWhen used for association by reference, the value of the gml:remoteSchema attribute can be used to locate a schema fragment that constrains the target instance.   \n\nIn many cases it is desirable to impose the constraint prohibiting the occurence of both reference and value in the same instance, as that would be ambiguous.  This is accomplished by adding a directive in the annotation element of the element declaration.  This directive can be in the form of normative prose, or can use a Schematron pattern to automatically constrain co-occurrence - see the declaration for _strictAssociation below.   \n\nIf co-occurence is not prohibited, then both a link and content may be present.  If this occurs in an instance, then the rule for interpretation is that the instance found by traversing the href provides the normative value of the property, and should be used when possible.  The value(s) included as content may be used if the remote instance cannot be resolved.  This may be considered to be a \"cached\" version of the value(s).\n\t\t\n","_MetaData":"\n\t\t\tAn abstract base type for complex metadata types.\n\t\t\n\n\t\t\tAbstract element which acts as the head of a substitution group for packages of MetaData properties.\n\t\t","member":"\n\t\t\tA pattern or base for derived types used to specify complex types corresponding to an  unspecified UML association - either composition or aggregation.  Restricts the cardinality of Objects contained in the association to a maximum of one.  An instance of this type can contain an element representing an Object, or serve as a pointer to a remote Object.  \n\nDescendents of this type can be restricted in an application schema to \n* allow only specified classes as valid participants in the aggregation\n* allow only association by reference (i.e. empty the content model) or by value (i.e. remove the xlinks).    \n\nWhen used for association by reference, the value of the gml:remoteSchema attribute can be used to locate a schema fragment that constrains the target instance.   \n\nIn many cases it is desirable to impose the constraint prohibiting the occurence of both reference and value in the same instance, as that would be ambiguous.  This is accomplished by adding a directive in the annotation element of the element declaration.  This directive can be in the form of normative prose, or can use a Schematron pattern to automatically constrain co-occurrence - see the declaration for _strictAssociation below.   \n\nIf co-occurence is not prohibited, then both a link and content may be present.  If this occurs in an instance, then the rule for interpretation is that the instance found by traversing the href provides the normative value of the property, and should be used when possible.  The value(s) included as content may be used if the remote instance cannot be resolved.  This may be considered to be a \"cached\" version of the value(s).\n\t\t\n","surfaceProperty":"\n\t\t\tA property that has a surface as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\tThis property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which can be used by GML Application Schemas whenever a GML Feature has a property with a value that is substitutable for _Surface.\n\t\t","posList":"\n\t\t\tDirectPositionList instances hold the coordinates for a sequence of direct positions within the same coordinate \n\t\t\treference system (CRS).\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t","@count":"\n\t\t\t\t\t\t\"count\" allows to specify the number of direct positions in the list. If the attribute count is present then \n\t\t\t\t\t\tthe attribute srsDimension shall be present, too.\n\t\t\t\t\t","LocationString":"\n\t\t\tThis type is available wherever there is a need for a \"text\" type property. It is of string type, so the text can be included inline, but the value can also be referenced remotely via xlinks from the AssociationAttributeGroup. If the remote reference is present, then the value obtained by traversing the link should be used, and the string content of the element can be used for an annotation.\n\t\t\n","timeInterval":"\n\t\t\tThis type extends the built-in xsd:decimal simple type to allow floating-point \n      values for temporal length. According to  the ISO 11404 model you have to use \n      positiveInteger together with appropriate values for radix and factor. The \n      resolution of the time interval is to one radix ^(-factor) of the specified \n      time unit (e.g. unit=\"second\", radix=\"10\", factor=\"3\" specifies a resolution \n      of milliseconds). It is a subtype of TimeDurationType.\n\t\t\n\n\t\t\tThis element is a valid subtype of TimeDurationType \n\t\t\taccording to section 3.14.6, rule 2.2.4 in XML Schema, Part 1.\n\t\t","@unit":"\n\t\t\tStandard units for measuring time intervals (see ISO 31-1).\n\t\t\n","minutes":"\n\t\t\tInteger number of arc-minutes in a degree-minute-second angular value.\n\t\t\n","priorityLocation":"\n\t\t\tG-XML component\n\t\t\tDeprecated in GML 3.1.0\n\t\t\n\n\t\t\tDeprecated in GML 3.1.0\n\t\t","Envelope":"\n\t\t\tEnvelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct \n\t\t\tposition is the \"lower corner\" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), \n\t\t\tthe second one the \"upper corner\" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the \n\t\t\tenvelope).\n\t\t\n","decimalMinutes":"\n\t\t\tDecimal number of arc-minutes in a degree-minute angular value.\n\t\t\n","polygonProperty":"\n\t\t\tThis type is deprecated with GML 3 and shall not be used. It is included for backwards compatibility with GML 2. Use SurfacePropertyType instead.\nA property that has a polygon as its value domain can either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n\n\t\t\tDeprecated with GML 3.0 and included only for backwards compatibility with GML 2.0. Use \"surfaceProperty\" instead.\nThis property element either references a polygon via the XLink-attributes or contains the polygon element.\n\t\t","featureMember":"\n\t\t\tContainer for a feature - follow gml:AssociationType pattern.\n\t\t\n","quantityType":"\n\t\t\tThis type is available wherever there is a need for a \"text\" type property. It is of string type, so the text can be included inline, but the value can also be referenced remotely via xlinks from the AssociationAttributeGroup. If the remote reference is present, then the value obtained by traversing the link should be used, and the string content of the element can be used for an annotation.\n\t\t\n\n\t\t\tInformal description of the phenomenon or type of quantity that is measured or observed. For example, \"length\", \"angle\", \"time\", \"pressure\", or \"temperature\". When the quantity is the result of an observation or measurement, this term is known as Observable Type or Measurand.\n\t\t","BaseUnit":"\n\t\t\tDefinition of a unit of measure which is a base unit from the system of units.  A base unit cannot be derived by combination of other base units within this system.  Sometimes known as \"fundamental unit\".\n\t\t\n","angle":"\n      Number with a scale.  \n      The value of uom (Units Of Measure) attribute is a reference to a Reference System for the amount, either a ratio or position scale. \n    \n","duration":"\n\t\t\tThis element is an instance of the primitive xsd:duration simple type to \n      enable use of the ISO 8601 syntax for temporal length (e.g. P5DT4H30M). \n      It is a valid subtype of TimeDurationType according to section 3.14.6, \n      rule 2.2.4 in XML Schema, Part 1.\n\t\t","_TimeObject":"\n\t\t\tThe abstract supertype for temporal objects.\n\t\t\n\n\t\t\tThis abstract element acts as the head of the substitution group for temporal primitives and complexes.\n\t\t","pointRep":"\n\t\t\tA property that has a point as its value domain can either be an appropriate geometry element encapsulated in an \n\t\t\telement of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located \n\t\t\telsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n\n\t\t\tDeprecated with GML version 3.1.0. Use \"pointProperty\" instead. Included for backwards compatibility with GML 3.0.0.\n\t\t","seconds":"\n\t\t\tNumber of arc-seconds in a degree-minute-second angular value.\n\t\t\n","centerOf":"\n\t\t\tA property that has a point as its value domain can either be an appropriate geometry element encapsulated in an \n\t\t\telement of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located \n\t\t\telsewhere in the same document). Either the reference or the contained element must be given, but neither both nor none.\n\t\t\n","EnvelopeWithTimePeriod":"\n\t\t\tEnvelope that includes also a temporal extent.\n\t\t\n","_strictAssociation":"\n\t\t\tA pattern or base for derived types used to specify complex types corresponding to an  unspecified UML association - either composition or aggregation.  Restricts the cardinality of Objects contained in the association to a maximum of one.  An instance of this type can contain an element representing an Object, or serve as a pointer to a remote Object.  \n\nDescendents of this type can be restricted in an application schema to \n* allow only specified classes as valid participants in the aggregation\n* allow only association by reference (i.e. empty the content model) or by value (i.e. remove the xlinks).    \n\nWhen used for association by reference, the value of the gml:remoteSchema attribute can be used to locate a schema fragment that constrains the target instance.   \n\nIn many cases it is desirable to impose the constraint prohibiting the occurence of both reference and value in the same instance, as that would be ambiguous.  This is accomplished by adding a directive in the annotation element of the element declaration.  This directive can be in the form of normative prose, or can use a Schematron pattern to automatically constrain co-occurrence - see the declaration for _strictAssociation below.   \n\nIf co-occurence is not prohibited, then both a link and content may be present.  If this occurs in an instance, then the rule for interpretation is that the instance found by traversing the href provides the normative value of the property, and should be used when possible.  The value(s) included as content may be used if the remote instance cannot be resolved.  This may be considered to be a \"cached\" version of the value(s).\n\t\t\n\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\tmust carry a reference to an object or contain an object but not both\n\t\t","featureMembers":"\n\t\t\tContainer for features - follow gml:ArrayAssociationType pattern.\n\t\t\n","derivationUnitTerm":"\n\t\t\tDefinition of one unit term for a derived unit of measure. This unit term references another unit of measure (uom) and provides an integer exponent applied to that unit in defining the compound unit. The exponent can be positive or negative, but not zero.\n\t\t\n","curveArrayProperty":"\n\t\t\tA container for an array of curves. The elements are always contained in the array property, referencing geometry elements \n\t\t\tor arrays of geometry elements is not supported.\n\t\t\n"}
WEB-INF/jsp/editor.jsp:<p align="left">Mappings: <font color=black><s:property value="mapname"/> <span id='lido09Notice'></span></font></p>
WEB-INF/jsp/home.jsp: int totallido=0;
WEB-INF/jsp/home.jsp:	            totallido+=transformed;
WEB-INF/jsp/home.jsp:	 <tr><td><%=totallido %> transformed items</td></tr>
WEB-INF/jsp/import.jsp:		<li><div style="display:none"><s:checkbox name="isLido" id="isLido"/>	This is a LIDO import</div></li>
WEB-INF/jsp/importsPanel.jsp:			                    <s:if test="lido==false">
WEB-INF/jsp/importsPanel.jsp:			                    <s:elseif test="lido==true && pub.status!='NOT DONE'">
WEB-INF/jsp/importsPanel.jsp:					                       				<div style="margin-left:5px;margin-top:10px;">Lido import, no further processing required. This import can be published directly to Europeana.
WEB-INF/jsp/importsPanel.jsp:			                    <s:elseif test="lido==true && pub.status=='NOT DONE'">
WEB-INF/jsp/importsPanel.jsp:										          				<div style="margin-left:5px;margin-top:10px;">Lido import, no further processing required. This import can be published directly to Europeana.
WEB-INF/jsp/inputESE.xml:<lido xmlns:museumdat="http://museum.zib.de/museumdat"><descriptiveMetadata><objectIdentificationWrap><titleWrap><titleSet><appellationValue>Bronzeschilde</appellationValue></titleSet></titleWrap><repositoryWrap><repositorySet><repositoryName><legalBodyName><appellationValue>Landesmuseum f√ºr Vorgeschichte</appellationValue></legalBodyName></repositoryName><workID type="Inventarnummer">HK 61:99, 1/2</workID></repositorySet></repositoryWrap><objectDescriptionWrap><objectDescriptionSet><descriptiveNoteValue>Moorfund, Bronzeblech, geh√§mmert, oval</descriptiveNoteValue></objectDescriptionSet></objectDescriptionWrap></objectIdentificationWrap></descriptiveMetadata><administrativeMetadata/></lido>
WEB-INF/jsp/itemPanel.jsp:		<s:if test="lido==false">
WEB-INF/jsp/itemPanel.jsp:					<s:if test="transformed==true || lido==true">
WEB-INF/jsp/lido-draft-v0.9.xsd:<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:doc="http://www.mda.org.uk/spectrumXML/Documentation" xmlns:gml="http://www.opengis.net/gml" xmlns:lido="http://www.lido-schema.org" xmlns:xml="http://www.w3.org/XML/1998/namespace" targetNamespace="http://www.lido-schema.org" elementFormDefault="qualified" attributeFormDefault="qualified">
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:documentation>LIDO - Lightweight Information Describing Objects</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:documentation>LIDO DRAFT v0.9</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:documentation>LIDO draft version: 2010-03-23: lido-draft-v0.9.xsd</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="actorID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="nameActorSet" type="lido:appellationComplexType" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="nationalityActor" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="genderActor" type="lido:textComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="actor" type="lido:actorComplexType"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="roleActor" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="attributionQualifierActor" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="extentActor" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayActorInRole" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA lite v1.1: displayCreator corresponds partly / is generalized into lido:displayActor</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: displayCreator corresponds partly / is generalized into lido:displayActor</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="actorInRole" type="lido:actorInRoleComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayActor" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA lite v1.1: displayCreator corresponds partly to lido:displayActor (without role information)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: displayCreator corresponds partly to lido:displayActor (without role information)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="actor" type="lido:actorComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:rightsWorkWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:recordWrap"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:resourceWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: e.g. title, nameCreator, locationName correspond to lido:appellationValue</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: e.g. title, repositoryName, nameActor, nameLocation correspond to lido:appellationValue</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: e.g. sourceTitle, sourceNameCreator correspond to lido:sourceAppellation</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: e.g. sourceTitle, sourceNameActor correspond to lido:sourceAppellation</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:documentation>CDWA Lite v1.1: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:documentation>museumdat v1.0: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:extension base="lido:conceptComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:								<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="conceptID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="term" type="lido:termComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: indexingDatesSet is generalized and refined into lido:dateComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: indexingDates is refined into lido:dateComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayDate" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA lite v1.1: displayCreationDate is generalized into lido:displayDate</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: displayCreationDate is generalized into lido:displayDate</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="date" type="lido:dateComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectClassificationWrap"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectIdentificationWrap"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:eventWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectRelationWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="descriptiveNoteValue" type="lido:textComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="sourceDescriptiveNote" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="displayState" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="displayEdition" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="sourceStateEdition" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: indexingEventSet is extended and refined into lido:eventComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventType" type="lido:conceptComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: eventType is refined into lido:eventType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="roleInEvent" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventName" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventActor" type="lido:actorInRoleSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="culture" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventDate" type="lido:dateSetComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="periodName" type="lido:conceptComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:placeSetComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventMethod" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventMaterialsTech" type="lido:materialsTechSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="thingPresent" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="relatedEventSet" type="lido:relatedEventSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="eventDescriptionSet" type="lido:descriptiveNoteComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayEvent" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="event" type="lido:eventComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: eventWrap corresponds to lido:eventWrap</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="eventSet" type="lido:eventSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:type" use="required"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:extension base="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:								<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="legalBodyID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="legalBodyName" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="legalBodyWeblink" type="lido:webResourceComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:	<xsd:element name="lido">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="lidoRecID" type="lido:identifierComplexType" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:documentation>A unique lido record identification, preferably composed of an identifier for the contributor and a record identification in the contributor's (local) system.</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="category" type="lido:conceptComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:descriptiveMetadata" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:administrativeMetadata" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:	<xsd:element name="lidoWrap">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:lido" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:conceptComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="extentMaterialsTech" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="sourceMaterialsTech" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayMaterialsTech" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="materialsTech" type="lido:materialsTechComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectWorkTypeWrap"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:classificationWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="objectWebResource" type="lido:webResourceComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="objectID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: locRelatedWork@relWorkID corresponds to lido:objectID</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: locRelatedWork@relWorkID corresponds to lido:objectID</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="objectDescriptionSet" type="lido:descriptiveNoteComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: identificationWrap corresponds to lido:objectIdentificationWrap</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:titleWrap"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:inscriptionsWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:repositoryWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:displayStateEditionWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectDescriptionWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectMeasurementsWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:type" use="required"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="extentMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="qualifierMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="formatMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="shapeMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="scaleMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayObjectMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="objectMeasurements" type="lido:objectMeasurementsComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="objectMeasurementsSet" type="lido:objectMeasurementsSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: relationWrap corresponds to lido:objectRelationWrap</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:subjectWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element ref="lido:relatedWorksWrap" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayObject" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="object" type="lido:objectComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="objectWorkType" type="lido:conceptComplexType" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:documentation>CDWA Lite v1.1: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:documentation>museumdat v1.0: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: locationSet corresponds partly to lido:placeComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: indexingLocationWrap is refined into lido:placeComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="placeID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="namePlaceSet" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: locationName corresponds partly to lido:namePlaceSet/lido:appellationComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:gmlComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="partOfPlace" type="lido:placeComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:conceptComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:politicalEntity">
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:geographicalEntity">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displayPlace" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="place" type="lido:placeComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>Note: The metadata information contains the reference to the "lido"-metadata set but may also be constituted by reference to an "object data sheet" in an online database.</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="recordInfoID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="recordInfoLink" type="lido:webResourceComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="recordRelID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="recordMetadataLoc" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="recordID" type="lido:identifierComplexType" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="recordType" type="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="recordSource" type="lido:legalBodyRefComplexType" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="recordRights" type="lido:rightsComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="recordInfoSet" type="lido:recordInfoSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="relatedEvent" type="lido:eventSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="relatedEventRelType" type="lido:conceptComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="relatedWork" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="relatedWorkRelType" type="lido:conceptComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="relatedWorksSet" type="lido:relatedWorksSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: locationSet is partly a subset of lido:repositorySet</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: repositorySet - refined into lido:repositorySet (see repositoryName and repositoryLocation)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="repositoryName" type="lido:legalBodyRefComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: locationName corresponds partly to lido:repositoryName</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: repositoryName - refined into lido:repositoryName</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="repositoryLocation" type="lido:placeComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: locationWrap is partly corresponding lido:repositorySet</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: repositoryWrap - refined into lido:repositoryWrap (see repositoryName and repositoryLocation)</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="repositorySet" type="lido:repositorySetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:webResourceComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="resourceID" type="lido:identifierComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="resourceType" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="rightsResource" type="lido:rightsComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="resourceViewType" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:conceptComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:element name="relatedResourceRelType" type="lido:textComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:element name="labelRelatedResource" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:linkscheme"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="resourceSet" type="lido:resourceSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="rightsType" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="rightsDate" type="lido:dateComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="rightsHolder" type="lido:legalBodyRefComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="creditLine" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="rightsWorkSet" type="lido:rightsComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:documentation>CDWA Lite v1.1: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rightsComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:						<xsd:documentation>museumdat v1.0: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rightsComplexType</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="extentSubject" type="lido:textComplexType" minOccurs="0">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="subjectConcept" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="subjectActor" type="lido:actorSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="subjectDate" type="lido:dateSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="subjectEvent" type="lido:eventSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="subjectPlace" type="lido:placeSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="subjectObject" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="displaySubject" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:element name="subject" type="lido:subjectComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:element name="subjectSet" type="lido:subjectSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:			<xsd:documentation>The attributes are to be used as follows:pref - has allowable values:  preferred | alternate. Indicates whether it is the preferred name of the concept / term, or an alternative name.xml:lang - specifies the language of the concept / term.addedSearchTerm - has allowable values: yes | no. Default is "no". imported = "yes" means that the item includes an additional item (e.g. synonym, generic term) from the standard vocabulary used, which is included only for retrieval purposes.encodinganalog and label - used to indicate the category of data from the source system from the data values were taken. encodinganalog refers to the internal label for the external field name. The reference format is specified in lidoWrap.The attributes are optional.</xsd:documentation>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:addedSearchTerm"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:							<xsd:extension base="lido:appellationComplexType">
WEB-INF/jsp/lido-draft-v0.9.xsd:								<xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-proxy.xsd:<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:lido="http://www.lido-schema.org" targetNamespace="http://www.lido-schema.org" elementFormDefault="qualified" attributeFormDefault="unqualified">
WEB-INF/jsp/lido-proxy.xsd:	<xsd:redefine schemaLocation="lido-v0.7.xsd">
WEB-INF/jsp/lido-proxy.xsd:				<xsd:restriction base="lido:event">
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventID" type="lido:identifier" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventType" type="lido:customConcept"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="roleInEvent" type="lido:concept" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventName" type="lido:appellation" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventActor" type="lido:actorInRoleSet" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="culture" type="lido:concept" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventDate" type="lido:dateSet" minOccurs="0"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventPlace" type="lido:placeSet" minOccurs="0"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventMethod" type="lido:concept" minOccurs="0"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventMaterialsTech" type="lido:materialsTechSet" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="thingPresent" type="lido:objectSet" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="relatedEvent" type="lido:eventSet" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:						<xsd:element name="eventDescriptionSet" type="lido:descriptiveNote" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-proxy.xsd:			<xsd:restriction base="lido:term">
WEB-INF/jsp/lido-proxy.xsd:			<xsd:restriction base="lido:concept">
WEB-INF/jsp/lido-proxy.xsd:					<xsd:element name="conceptID" type="lido:identifier" minOccurs="0"/>
WEB-INF/jsp/lido-proxy.xsd:					<xsd:element name="term" type="lido:customTerm" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.7.xsd:<xsd:schema targetNamespace="http://www.lido-schema.org" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:doc="http://www.mda.org.uk/spectrumXML/Documentation" xmlns:gml="http://www.opengis.net/gml" xmlns:lido="http://www.lido-schema.org">
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:documentation>LIDO - Lightweight Information Describing Objects</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:documentation>LIDO current version: 2009-08-20: lido-v0.7.xsd </xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:documentation>LIDO v0.7</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:documentation>LIDO - Lightweight Information Describing Objects v0.6 / museumdat v1.6</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:documentation>This includes modified element grouping, moving display elements to corresponding index elements:objectClassificationWrapObject / Work TypeClassificationobjectIdentificationWrapTitle / Name (mandatory)InscriptionsRepository / LocationState / EditionObject DescriptionMeasurementseventWrapeventSetobjectRelationWrapSubject SetRelated Worksextended content model of event (formerly indexingEventSet):added eventIDchanged content model for eventTypemoved culture element into eventSetmoved materials/technique element into eventSetadded thingRelatedadded eventRelatedadded eventDescriptionimported GML namespacechanged content model of location:added _GML elementadded partOfLocationmodified identifier handling:introduced complex type identifierreplaced termsource/termsourceID attributes by proper, and repeatable identifier element (elements/sets restructured where necessary)attached identifier element to concept level instead of term or name level (e.g. actorID instead of termsourceID for nameActor)introduced identifier for lido element</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:documentation>For LIDO: #169; 2009, ARTstor, Collections Trust, Deutscher Museumsbund - Fachgruppe Dokumentation, Deutsches Dokumentationszentrum f&#252;r Kunstgeschichte - Bildarchiv Foto Marburg, digiCULT Schleswig-Holstein, Institut f&#252;r Museumsforschung (SMB-PK), J. Paul Getty Trust, Zuse-Institut Berlin</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="actorID" maxOccurs="unbounded" minOccurs="0" type="lido:identifier"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="nameActorSet" maxOccurs="unbounded" type="lido:appellation">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="nationalityActor" maxOccurs="unbounded" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element maxOccurs="1" minOccurs="0" ref="lido:vitalDatesActor"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="genderActor" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="actor" type="lido:actor"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="roleActor" maxOccurs="unbounded" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="attributionQualifierActor" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="extentActor" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayActorInRole" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>CDWA lite v1.1: displayCreator corresponds partly / is generalized into lido:displayActor</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>museumdat v1.0: displayCreator corresponds partly / is generalized into lido:displayActor</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="actorInRole" minOccurs="0" type="lido:actorInRole"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayActor" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>CDWA lite v1.1: displayCreator corresponds partly to lido:displayActor (without role information)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>museumdat v1.0: displayCreator corresponds partly to lido:displayActor (without role information)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="actor" minOccurs="0" type="lido:actor"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="1" minOccurs="0" ref="lido:rightsWorkWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element ref="lido:recordWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:resourceWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element ref="lido:appellationValue"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:sourceAppellation"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>CDWA Lite v1.1: e.g. title, nameCreator, locationName correspond to lido:appellationValue</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: e.g. title, repositoryName, nameActor, nameLocation correspond to lido:appellationValue</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="classification" maxOccurs="unbounded" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>CDWA Lite v1.1: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>museumdat v1.0: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="conceptID" minOccurs="0" type="lido:identifier"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="term" maxOccurs="unbounded" minOccurs="0" type="lido:term"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="conceptID" minOccurs="0" type="lido:identifier"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="term" maxOccurs="unbounded" minOccurs="0" type="lido:term"/>
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>CDWA Lite v1.1: indexingDatesSet is generalized and refined into lido:date</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: indexingDates is refined into lido:date</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element ref="lido:earliestDate"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element ref="lido:latestDate"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="periodName" maxOccurs="1" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayDate" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>CDWA lite v1.1: displayCreationDate is generalized into lido:displayDate</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>museumdat v1.0: displayCreationDate is generalized into lido:displayDate</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="date" minOccurs="0" type="lido:date"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element ref="lido:objectClassificationWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element ref="lido:objectIdentificationWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:eventWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:objectRelationWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="descriptiveNoteValue" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="sourceDescriptiveNote" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="displayState" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="displayEdition" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="sourceStateEdition" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: indexingEventSet is extended and refined into lido:event</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventID" maxOccurs="unbounded" minOccurs="0" type="lido:identifier"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventType" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>museumdat v1.0: eventType is refined into lido:eventType</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="roleInEvent" maxOccurs="unbounded" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventName" maxOccurs="unbounded" minOccurs="0" type="lido:appellation"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventActor" maxOccurs="unbounded" minOccurs="0" type="lido:actorInRoleSet"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="culture" maxOccurs="unbounded" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventDate" minOccurs="0" type="lido:dateSet">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventPlace" minOccurs="0" type="lido:placeSet">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventMethod" maxOccurs="1" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:materialsTechSet">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="thingPresent" maxOccurs="unbounded" minOccurs="0" type="lido:objectSet">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="relatedEvent" maxOccurs="unbounded" minOccurs="0" type="lido:eventSet">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="eventDescriptionSet" maxOccurs="unbounded" minOccurs="0" type="lido:descriptiveNote">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayEvent" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="event" minOccurs="0" type="lido:event"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: eventWrap corresponds to lido:eventWrap</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="eventSet" maxOccurs="unbounded" minOccurs="0" type="lido:eventSet"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute use="required" ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="inscriptions" maxOccurs="unbounded" minOccurs="0" type="lido:textType">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="legalBodyID" maxOccurs="unbounded" minOccurs="0" type="lido:identifier">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="legalBodyName" maxOccurs="unbounded" minOccurs="0" type="lido:appellation">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="legalBodyWeblink" maxOccurs="unbounded" minOccurs="0" type="lido:webResource">
WEB-INF/jsp/lido-v0.7.xsd:  <xsd:element name="lido">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="lidoRecID" maxOccurs="unbounded" type="lido:identifier">
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>A unique lido record identification, preferably composed of an identifier for the contributor and a record identification in the contributor's (local) system.</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:category"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" ref="lido:descriptiveMetadata"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" ref="lido:administrativeMetadata"/>
WEB-INF/jsp/lido-v0.7.xsd:  <xsd:element name="lidoWrap">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" ref="lido:lido"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="relatedResourceRelType" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="labelRelatedResource" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:attribute ref="lido:linkscheme"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="termMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:conceptType">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="extentMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="sourceMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="materialsTech" maxOccurs="1" minOccurs="0" type="lido:materialsTech"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:attribute use="required" ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="objectWebResource" maxOccurs="unbounded" minOccurs="0" type="lido:webResource">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="objectID" maxOccurs="unbounded" minOccurs="0" type="lido:identifier">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>CDWA Lite v1.1: locRelatedWork@relWorkID corresponds to lido:objectID</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>museumdat v1.0: locRelatedWork@relWorkID corresponds to lido:objectID</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="objectNote" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element ref="lido:objectWorkTypeWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:classificationWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="objectDescriptionSet" maxOccurs="unbounded" minOccurs="0" type="lido:descriptiveNote">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: identificationWrap corresponds to lido:objectIdentificationWrap</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element ref="lido:titleWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:inscriptionsWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:repositoryWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:displayStateEditionWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:objectDescriptionWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:objectMeasurementsWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:measurementsSet"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="extentMeasurements" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="qualifierMeasurements" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="formatMeasurements" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="shapeMeasurements" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="scaleMeasurements" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayObjectMeasurements" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="objectMeasurements" maxOccurs="1" minOccurs="0" type="lido:objectMeasurements"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="objectMeasurementsSet" maxOccurs="unbounded" minOccurs="0" type="lido:objectMeasurementsSet"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: relationWrap corresponds to lido:objectRelationWrap</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:subjectWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:relatedWorksWrap"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayObject" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="object" maxOccurs="1" minOccurs="0" type="lido:object"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="objectWorkType" maxOccurs="unbounded" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>CDWA Lite v1.1: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>museumdat v1.0: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>CDWA Lite v1.1: locationSet corresponds partly to lido:place</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: indexingLocationWrap is refined into lido:place</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="placeID" maxOccurs="unbounded" minOccurs="0" type="lido:identifier"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="namePlaceSet" maxOccurs="unbounded" minOccurs="0" type="lido:appellation">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:documentation>CDWA Lite v1.1: locationName corresponds partly to lido:namePlaceSet/lido:appellation</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="partOfPlace" maxOccurs="unbounded" minOccurs="0" type="lido:place">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="placeClassification" maxOccurs="unbounded" minOccurs="0" type="lido:conceptType">
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:attribute ref="lido:politicalEntity">
WEB-INF/jsp/lido-v0.7.xsd:    <xsd:attribute ref="lido:geographicalEntity">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="displayPlace" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="place" minOccurs="0" type="lido:place"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>Note: The metadata information contains the reference to the "lido"-metadata set but may also be constituted by reference to an "object data sheet" in an online database.</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordInfoID" maxOccurs="unbounded" minOccurs="0" type="lido:identifier">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordInfoLink" maxOccurs="unbounded" minOccurs="0" type="lido:webResource">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordRelID" maxOccurs="unbounded" minOccurs="0" type="lido:identifier">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordMetadataLoc" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordMetadataDate" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordID" maxOccurs="unbounded" type="lido:identifier">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordType" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="recordSource" maxOccurs="unbounded" type="lido:legalBodyRef">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:recordInfoSet"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="relatedWork" maxOccurs="unbounded" minOccurs="0" type="lido:objectSet"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="relatedWorkRelType" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:relatedWorksSet"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>CDWA Lite v1.1: locationSet is partly a subset of lido:repositorySet</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: repositorySet - refined into lido:repositorySet (see repositoryName and repositoryLocation)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="repositoryName" minOccurs="0" type="lido:legalBodyRef">
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>CDWA Lite v1.1: locationName corresponds partly to lido:repositoryName</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>museumdat v1.0: repositoryName - refined into lido:repositoryName</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:workID"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="repositoryLocation" minOccurs="0" type="lido:place">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>CDWA Lite v1.1: locationWrap is partly corresponding lido:repositorySet</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: repositoryWrap - refined into lido:repositoryWrap (see repositoryName and repositoryLocation)</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:repositorySet"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="linkResource" maxOccurs="unbounded" minOccurs="0" type="lido:webResource">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceID" minOccurs="0" type="lido:identifier">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceRelType" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceType" maxOccurs="unbounded" minOccurs="0" type="lido:term">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="rightsResource" maxOccurs="unbounded" minOccurs="0" type="lido:rights">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceViewDescription" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceViewType" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceViewSubjectTerm" maxOccurs="unbounded" minOccurs="0" type="lido:conceptType">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element minOccurs="0" ref="lido:resourceViewDate"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceSource" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:linkRelatedResource"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="resourceMetadataLoc" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:resourceSet"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="rightsType" maxOccurs="unbounded" minOccurs="0" type="lido:text"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="rightsDate" maxOccurs="unbounded" minOccurs="0" type="lido:date"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="rightsHolder" maxOccurs="unbounded" minOccurs="0" type="lido:legalBodyRef"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:element name="creditLine" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="rightsWorkSet" maxOccurs="unbounded" minOccurs="0" type="lido:rights">
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>CDWA Lite v1.1: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rights</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:            <xsd:documentation>museumdat v1.0: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rights</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>CDWA Lite v1.1: e.g. sourceTitle, sourceNameCreator correspond to lido:sourceAppellation</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>museumdat v1.0: e.g. sourceTitle, sourceNameActor correspond to lido:sourceAppellation</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="extentSubject" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="subjectConcept" maxOccurs="unbounded" minOccurs="0" type="lido:concept">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="subjectActor" maxOccurs="unbounded" minOccurs="0" type="lido:actorSet">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="subjectDate" maxOccurs="unbounded" minOccurs="0" type="lido:dateSet">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="subjectEvent" maxOccurs="unbounded" minOccurs="0" type="lido:eventSet">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="subjectPlace" maxOccurs="unbounded" minOccurs="0" type="lido:placeSet">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="subjectObject" maxOccurs="unbounded" minOccurs="0" type="lido:objectSet">
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="displaySubject" maxOccurs="unbounded" minOccurs="0" type="lido:text">
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:subject"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element maxOccurs="unbounded" minOccurs="0" ref="lido:subjectSet"/>
WEB-INF/jsp/lido-v0.7.xsd:      <xsd:documentation>Die Attribute sind folgenderma&#223;en zu verwenden:pref: hat als zul&#228;ssige Datenwerte: preferred | alternate, gibt an, ob es sich um die Vorzugsbezeichnung des Konzepts oder eine alternative Bezeichnung handelt.xml:lang: spezifiziert die Sprache der Bezeichnung.addedSearchTerm: hat als zul&#228;ssige Datenwerte: yes | no, die Standardeinstellung ist "no". imported="yes" bedeutet, dass das Element einen Zusatzeintrag (z.B. Synonym, Oberbegriff) aus dem verwendeten Normvokabular beinhaltet, der nur f&#252;r Retrievalzwecke mitgeliefert wird.encodinganalog und label dienen zur Angabe der Datenkategorie des Quellsystems, aus dem die Datenwerte &#252;bernommen wurden. encodinganalog bezieht sich dabei auf den internen, label auf den externen Feldnamen. Das Bezugsformat ist im lidoWrap angegeben. Die Attribute sind optional.</xsd:documentation>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:addedSearchTerm"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:element name="titleSet" maxOccurs="unbounded" type="lido:appellation">
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:source"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.7.xsd:        <xsd:attribute ref="lido:pref"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:type"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:encodinganalog"/>
WEB-INF/jsp/lido-v0.7.xsd:          <xsd:attribute ref="lido:label"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:lido="http://www.lido-schema.org" targetNamespace="http://www.lido-schema.org" elementFormDefault="qualified" attributeFormDefault="unqualified">
WEB-INF/jsp/lido-v0.9-proxy.xsd:	<xsd:redefine schemaLocation="lido-draft-v0.9.xsd">
WEB-INF/jsp/lido-v0.9-proxy.xsd:				<xsd:restriction base="lido:eventComplexType">
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventType" type="lido:customConcept"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="roleInEvent" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventName" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventActor" type="lido:actorInRoleSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="culture" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventDate" type="lido:dateSetComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="periodName" type="lido:conceptComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventPlace" type="lido:placeSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventMethod" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventMaterialsTech" type="lido:materialsTechSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="thingPresent" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="relatedEventSet" type="lido:relatedEventSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:						<xsd:element name="eventDescriptionSet" type="lido:descriptiveNoteComplexType" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:			<xsd:restriction base="lido:termComplexType">
WEB-INF/jsp/lido-v0.9-proxy.xsd:			<xsd:restriction base="lido:conceptComplexType">
WEB-INF/jsp/lido-v0.9-proxy.xsd:					<xsd:element name="conceptID" type="lido:identifierComplexType" minOccurs="0"/>
WEB-INF/jsp/lido-v0.9-proxy.xsd:					<xsd:element name="term" type="lido:customTerm" minOccurs="0" maxOccurs="unbounded"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:  XSL Transform to convert LIDO XML data, according to http://www.lido-schema.org/schema/v0.9/lido-v0.9.xsd, 
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:	xmlns:ns0="http://www.lido-schema.org" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" 
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:	xmlns:lido="http://www.lido-schema.org" 
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:	exclude-result-prefixes="lido xs fn">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:for-each select="lido:lidoWrap/lido:lido">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:when test="contains(lido:administrativeMetadata/lido:recordWrap/lido:recordType, '/multipleResources') 
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type='image_thumb'][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type='image_thumb'][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="../../../../lido:descriptiveMetadata">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="../../../..//lido:term[@lido:addedSearchTerm = 'yes'][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../../..//lido:appellationValue[(@lido:pref = 'alternate')][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../../..//lido:legalBodyName[not(position() = 1)]/lido:appellationValue[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../../..//lido:partOfPlace//lido:appellationValue[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../../..//lido:placeClassification/lido:term[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:value-of select="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term[position() = 1]" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:value-of select="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type'][1]/lido:term[not(.='')][1]" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="contains(../../../../lido:lidoRecID, 'DE-Mb112')">Bildarchiv Foto Marburg</xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:for-each select="../../../lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[not(.='')][1]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="../../../lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:if test="not(../../../lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink)">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="contains(lido:administrativeMetadata/lido:recordWrap/lido:recordType, '/multipleResources')">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet[count(not(lido:linkResource='')) &gt; 0]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="../../../lido:descriptiveMetadata">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="../../..//lido:term[@lido:addedSearchTerm = 'yes'][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../..//lido:appellationValue[@lido:pref = 'alternate'][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../..//lido:legalBodyName[not(position() = 1)]/lido:appellationValue[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../..//lido:partOfPlace//lido:appellationValue[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| ../../..//lido:placeClassification/lido:term[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:linkResource[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:value-of select="../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type'][1]/lido:term[not(.='')][1]" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="../..//lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[not(.='')][1]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="../..//lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:if test="not(../..//lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink)">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:linkResource[not(.='')][1]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:descriptiveMetadata">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:administrativeMetadata">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:administrativeMetadata">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:resourceWrap/lido:resourceSet[count(not(lido:linkResource='')) &gt; 0][1]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select=".//lido:term[@lido:addedSearchTerm = 'yes'][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| .//lido:appellationValue[@lido:pref = 'alternate'][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| .//lido:legalBodyName[not(position() = 1)]/lido:appellationValue[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| .//lido:partOfPlace//lido:appellationValue[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						| .//lido:placeClassification/lido:term[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type = 'image_thumb'][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:value-of select="lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type'][1]/lido:term[not(.='')][1]" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[not(.='')][1]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:administrativeMetadata/lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:when test="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type = 'image_master'][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type = 'image_master'][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:when test="lido:administrativeMetadata/lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[not(.='')]" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:titleWrap/lido:titleSet/lido:appellationValue[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:when test=" @lido:pref = 'alternate'">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:objectWorkTypeWrap/lido:objectWorkType/lido:term[not(.='')][not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:classificationWrap/lido:classification[not(contains(@lido:type, 'europeana:')) and not(contains(@lido:type, 'euroepana:'))]/lido:term[not(.='')][not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="lower-case(../@lido:type) = 'colour'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								or lower-case(../@lido:type) = 'age'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								or lower-case(../@lido:type) = 'object-status'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:if test="../@lido:type"> (<xsl:value-of select="../@lido:type" />)</xsl:if>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:objectDescriptionWrap/lido:objectDescriptionSet/lido:descriptiveNoteValue[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:if test="../@lido:type">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:value-of select="concat(../@lido:type, ': ')"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:inscriptionsWrap/lido:inscriptions[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="@lido:type"><xsl:value-of select="." /></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:displayStateEditionWrap/*[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:repositoryWrap/lido:repositorySet[not(@lido:type='former')]/lido:workID[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						   <xsl:value-of select="concat(@lido:type, ' ',.)"/>						           
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:repositoryWrap/lido:repositorySet[not(.//lido:appellationValue='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="@lido:repositoryType='former' and ($desclang eq 'de' or $desclang eq 'deu' or $desclang eq 'ger')">Frühere Aufbewahrung/Standort: </xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="@lido:repositoryType='former'">Former Repository/Location: </xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						   <xsl:value-of select="concat($qualifier, lido:repositoryName/lido:legalBodyName[count(not(lido:appellationValue='')) &gt; 0][1]/lido:appellationValue[1], ' ', lido:repositoryLocation/lido:namePlaceSet[count(not(lido:appellationValue='')) &gt; 0][1]/lido:appellationValue[1])"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:objectIdentificationWrap/lido:objectMeasurementsWrap/lido:objectMeasurementsSet">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:objectMeasurements[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:for-each select="lido:objectMeasurements[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:when test="lido:qualifierMeasurements[not(.='')]"><xsl:value-of select="concat(lido:qualifierMeasurements[not(.='')][1], ' ')" /></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:measurementsSet[not(@lido:value='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:value-of select="concat(@lido:type, ': ', @lido:value, ' ', @lido:unit)"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="../lido:extentMeasurements[not(.='')]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:formatMeasurements[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:for-each select="../lido:extentMeasurements[not(.='')]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:shapeMeasurements[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:for-each select="../lido:extentMeasurements[not(.='')]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:scaleMeasurements[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:for-each select="../lido:extentMeasurements[not(.='')]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:displayObjectMeasurements[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:displayObjectMeasurements[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:classificationWrap/lido:classification[lower-case(../@lido:type) = 'colour'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								or lower-case(../@lido:type) = 'age'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								or lower-case(../@lido:type) = 'object-status']/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:value-of select="../@lido:type" />: <xsl:value-of select="."/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:eventWrap/lido:eventSet/lido:event">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:variable name="eventType" select="lido:eventType/lido:term[not(.='')][1]"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:eventActor">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="$creation and lido:actorInRole">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:actorInRole/lido:actor/lido:nameActorSet/lido:appellationValue[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:if test="not(@lido:pref = 'alternate')">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="count(not(.='')) = 1 and count(../../lido:roleActor[not(lido:term='')]) = 1"> (<xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="position() = 1 and ../../lido:roleActor[not(lido:term='')][position() = 1]"> (<xsl:value-of select="." />, </xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="position() = last() and ../../lido:roleActor[not(lido:term='')][position() = last()]"><xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:if test="not(../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')])"> [<xsl:value-of select="$eventType" />]</xsl:if>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="$creation and lido:displayActorInRole">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:displayActorInRole[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:actorInRole">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:actorInRole/lido:actor/lido:nameActorSet/lido:appellationValue[not(@lido:pref = 'alternate')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="count(not(.='')) = 1 and count(../../lido:roleActor[not(lido:term='')]) = 1"> (<xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="position() = 1 and ../../lido:roleActor[not(lido:term='')][position() = 1]"> (<xsl:value-of select="." />, </xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="position() = last() and ../../lido:roleActor[not(lido:term='')][position() = last()]"><xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:if test="not(../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')])"> [<xsl:value-of select="$eventType" />]</xsl:if>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:displayActorInRole">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:displayActorInRole[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:culture/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:eventMethod/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:eventMaterialsTech">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:materialsTech">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:materialsTech/lido:termMaterialsTech/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:when test="..[contains(lower-case(@lido:type), 'techn')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(../@lido:type, ': ', .)"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:when test="..[contains(lower-case(@lido:type), 'material')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:displayMaterialsTech">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:displayMaterialsTech[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:periodName/lido:term[not(@lido:addedSearchTerm = 'yes')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:eventDate">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="$creation and lido:date">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:date[not(lido:earliestDate='') and not(lido:latestDate='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:when test="lido:earliestDate = lido:latestDate">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(lido:earliestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(lido:earliestDate, '/', lido:latestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="$creation and lido:displayDate">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:displayDate[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:date">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:date[not(lido:earliestDate='') and not(lido:latestDate='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:when test="lido:earliestDate = lido:latestDate">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(lido:earliestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(lido:earliestDate, '/', lido:latestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:displayDate">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:displayDate[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:for-each select="lido:eventPlace">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:place">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:place/lido:namePlaceSet/lido:appellationValue[not(@lido:pref = 'alternate')][not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:when test="lido:displayPlace">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:displayPlace[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectRelationWrap/lido:relatedWorksWrap/lido:relatedWorksSet[count(not(lido:relatedWork/lido:object/lido:objectNote='')) &gt; 0]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="lido:relatedWorkRelType/lido:term ='part of'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								or lido:relatedWorkRelType/lido:term ='Teil von'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:relatedWork">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="lido:object">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:for-each select="lido:objectNote[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:													<xsl:when test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="count(../lido:objectNote[not(.='')]) = 1">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:if test="lido:objectWebResource[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(' [', lido:objectWebResource[not(.='')][1], ']')" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="lido:relatedWorkRelType ='has part'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								or lido:relatedWorkRelType ='hat Teil'
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:relatedWork">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="lido:object">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:for-each select="lido:objectNote[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:													<xsl:when test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="count(../lido:objectNote[not(.='')]) = 1">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:if test="lido:objectWebResource[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(' [', lido:objectWebResource[not(.='')][1], ']')" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test=".//lido:objectNote[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:when test="lido:relatedWorkRelType/lido:term"><xsl:value-of select="concat(' [', lido:relatedWorkRelType/lido:term[1], ']')" /></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:for-each select="lido:relatedWork">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="lido:object">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:for-each select="lido:objectNote[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:													<xsl:when test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:when test="count(../lido:objectNote[not(.='')]) = 1">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											<xsl:if test="lido:objectWebResource[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(' [', lido:objectWebResource[not(.='')][1], ']')" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:for-each select="lido:objectRelationWrap/lido:subjectWrap/lido:subjectSet">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="lido:subject">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:for-each select="lido:subject">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:									<xsl:variable name="extent"><xsl:value-of select="lido:extentSubject" /></xsl:variable>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										lido:subjectConcept[count(not(lido:term='')) &gt; 0]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											lido:subjectConcept/lido:term[not(.='')][not(@lido:addedSearchTerm = 'yes')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:if test="lido:subjectConcept/lido:conceptID[contains(@lido:source, 'Iconclass')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											lido:subjectConcept/lido:term[not(.='')][@lido:addedSearchTerm = 'yes'][1]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										lido:subjectActor/lido:actor
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										| lido:subjectPlace/lido:place
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											lido:subjectActor/lido:actor/lido:nameActorSet/lido:appellationValue[not(@lido:pref = 'alternate')][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											| lido:subjectPlace/lido:place/lido:namePlaceSet/lido:appellationValue[not(@lido:pref = 'alternate')][not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										lido:subjectObject/lido:object
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											lido:subjectObject/lido:object/lido:objectNote[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										lido:subjectDate/lido:date
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="lido:subjectDate/lido:date[not(lido:earliestDate='') and not(lido:latestDate='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:													<xsl:when test="lido:earliestDate = lido:latestDate">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:														<xsl:value-of select="lido:earliestDate"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:														<xsl:value-of select="concat(lido:earliestDate, '-', lido:latestDate)"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										lido:subjectEvent/lido:event
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										<xsl:for-each select="lido:subjectEvent/lido:event[count(not(lido:eventName/lido:appellationValue='')) &gt; 0]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:												<xsl:value-of select="concat(lido:eventType/lido:term[1], ': ', lido:eventName/lido:appellationValue[1], ' (', lido:eventID, ')')"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										lido:subjectActor/lido:displayActor
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										| lido:subjectDate/lido:displayDate
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										| lido:subjectEvent/lido:displayEvent
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										| lido:subjectPlace/lido:displayPlace
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:										| lido:subjectObject/lido:displayObject
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											lido:subjectActor/lido:displayActor[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											| lido:subjectDate/lido:displayDate[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											| lido:subjectEvent/lido:displayEvent[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											| lido:subjectPlace/lido:displayPlace[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:											| lido:subjectObject/lido:displayObject[not(.='')]
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:when test="lido:displaySubject">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:for-each select="lido:displaySubject[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:value-of select="../../../lido:descriptiveMetadata/@xml:lang" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:		<xsl:for-each select="lido:resourceViewDescription[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:		<xsl:for-each select="lido:resourceViewDate[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:		<xsl:for-each select="lido:resourceSource[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:if test="lower-case(@lido:type) = 'photographer' or contains(lower-case(@lido:type), 'fotograf')">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:value-of select="concat(@lido:type, ': ', .)" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:creditLine[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:creditLine[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsType[not(.='')] and not(lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName)">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsType[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName[not(lido:appellationValue/@lido:pref = 'alternate')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:if test="lido:appellationValue/@xml:lang">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:if test="../../lido:rightsType[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:value-of select="concat(../../lido:rightsType[not(.='')][1], ': ')" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:value-of select="lido:appellationValue"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:		<xsl:for-each select="lido:recordWrap/lido:recordID[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			   <xsl:value-of select="concat(@lido:type, ' ',. , ' [Metadata]')"/>						           
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:		<xsl:for-each select="lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[not(@lido:pref = 'alternate')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<xsl:when test="contains(../../../../../lido:lidoRecID, 'DE-Mb112')"><xsl:value-of select="concat(., ' [Metadata]')"/></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:when test="contains(lido:resourceSource[@lido:type='Fotoverwalter'], 'Bildarchiv Foto Marburg')">info:isil/DE-Mb112</xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:when test="lido:resourceSource"><xsl:value-of select="../lido:resourceSource[1]" /></xsl:when>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:		<xsl:for-each select="lido:resourceID[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:when test="lido:rightsResource/lido:creditLine[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:for-each select="lido:rightsResource/lido:creditLine[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:when test="lido:rightsResource/lido:rightsType[not(.='')] and not(lido:rightsResource/lido:rightsHolder/lido:legalBodyName)">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:for-each select="lido:rightsResource/lido:rightsType[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:			<xsl:when test="lido:rightsResource/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:for-each select="lido:rightsResource/lido:rightsHolder/lido:legalBodyName[not(lido:appellationValue/@lido:pref = 'alternate')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:if test="lido:appellationValue/@xml:lang">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:if test="../../lido:rightsType[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:								<xsl:value-of select="../../lido:rightsType[not(.='')][1]" />
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:							<xsl:value-of select="concat(lido:appellationValue, ' [Resource]')"/>
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:				<xsl:for-each select="lido:resourceSource[not(.='')]">
WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:						<xsl:if test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:if>
WEB-INF/jsp/lido2ese0.9.xsl:	xmlns:ns0="http://www.lido-schema.org" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" 
WEB-INF/jsp/lido2ese0.9.xsl:	xmlns:lido="http://www.lido-schema.org" 
WEB-INF/jsp/lido2ese0.9.xsl:	exclude-result-prefixes="lido xs fn">
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:for-each select="lido:lidoWrap/lido:lido">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:when test="contains(lido:administrativeMetadata/lido:recordWrap/lido:recordType, '/multipleResources') 
WEB-INF/jsp/lido2ese0.9.xsl:						lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type='image_thumb']">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type='image_thumb']">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="../../../../lido:descriptiveMetadata">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="../../../..//lido:term[@lido:addedSearchTerm = 'yes']
WEB-INF/jsp/lido2ese0.9.xsl:						| ../../../..//lido:appellationValue[@lido:pref = 'alternate']
WEB-INF/jsp/lido2ese0.9.xsl:						| ../../../..//lido:partOfPlace//lido:appellationValue
WEB-INF/jsp/lido2ese0.9.xsl:						| ../../../..//lido:placeClassification/lido:term
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:when test="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:value-of select="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term[position() = 1]" />
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:value-of select="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term[position() = 1]" />
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="../../../lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:when test="contains(lido:administrativeMetadata/lido:recordWrap/lido:recordType, '/multipleResources')">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="../../../lido:descriptiveMetadata">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="../../..//lido:term[@lido:addedSearchTerm = 'yes']
WEB-INF/jsp/lido2ese0.9.xsl:						| ../../..//lido:appellationValue[@lido:pref = 'alternate']
WEB-INF/jsp/lido2ese0.9.xsl:						| ../../..//lido:partOfPlace//lido:appellationValue
WEB-INF/jsp/lido2ese0.9.xsl:						| ../../..//lido:placeClassification/lido:term
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:linkResource">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:value-of select="../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term" />
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="../..//lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:linkResource">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:descriptiveMetadata">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:administrativeMetadata">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:resourceWrap/lido:resourceSet">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select=".//lido:term[@lido:addedSearchTerm = 'yes']
WEB-INF/jsp/lido2ese0.9.xsl:						| .//lido:appellationValue[@lido:pref = 'alternate']
WEB-INF/jsp/lido2ese0.9.xsl:						| .//lido:partOfPlace//lido:appellationValue
WEB-INF/jsp/lido2ese0.9.xsl:						| .//lido:placeClassification/lido:term
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type = 'image_thumb']">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:value-of select="lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term" />
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:administrativeMetadata/lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:titleWrap/lido:titleSet/lido:appellationValue">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:when test=" @lido:pref = 'alternate'">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:objectWorkTypeWrap/lido:objectWorkType/lido:term[not(@lido:addedSearchTerm = 'yes')] 
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:classificationWrap/lido:classification[not(@lido:type = 'europeana:type')]/lido:term[not(@lido:addedSearchTerm = 'yes')] 
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:when test="lower-case(../@lido:type) = 'colour'
WEB-INF/jsp/lido2ese0.9.xsl:								or lower-case(../@lido:type) = 'age'
WEB-INF/jsp/lido2ese0.9.xsl:								or lower-case(../@lido:type) = 'object-status'
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:value-of select="../@lido:type" />: <xsl:value-of select="."/>
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:if test="../@lido:type"> (<xsl:value-of select="../@lido:type" />)</xsl:if>
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:inscriptionsWrap/lido:inscriptions">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:value-of select="concat(@lido:type, ': ', .)" />
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:repositoryWrap/lido:repositorySet/lido:workID">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="../lido:repositoryName/lido:legalBodyID"><xsl:value-of select="../lido:repositoryName/lido:legalBodyID[1]" /></xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:otherwise><xsl:value-of select="../lido:repositoryName/lido:legalBodyName/lido:appellationValue[1]" /></xsl:otherwise>
WEB-INF/jsp/lido2ese0.9.xsl:						   <xsl:value-of select="concat($legalBody, ' - ', @lido:type, ' ',$ID)"/>						           
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:displayStateEditionWrap/*">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:objectDescriptionWrap/lido:objectDescriptionSet/lido:descriptiveNoteValue">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:if test="../@lido:type">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:value-of select="concat(../@lido:type, ': ')"/>
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:objectIdentificationWrap/lido:objectMeasurementsWrap/lido:objectMeasurementsSet">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:objectMeasurements">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:objectMeasurements/lido:measurementsSet">
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:value-of select="concat(@lido:type, ': ', @lido:value, ' ', @lido:unit)"/>
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:for-each select="../lido:extentMeasurements"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:displayObjectMeasurements">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:displayObjectMeasurements">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:eventWrap/lido:eventSet/lido:event">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:variable name="eventType" select="lido:eventType/lido:term[1]"/>
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:eventActor">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="$creation and lido:actorInRole">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:actorInRole/lido:actor/lido:nameActorSet/lido:appellationValue">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:if test="not(@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:for-each select="../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:when test="count(.) = 1 and count(../../lido:roleActor) = 1"> (<xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:when test="position() = 1 and ../../lido:roleActor[position() = 1]"> (<xsl:value-of select="." />, </xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:when test="position() = last() and ../../lido:roleActor[position() = last()]"><xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:if test="not(../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')])"> [<xsl:value-of select="$eventType" />]</xsl:if>
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="$creation and lido:displayActorInRole">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:displayActorInRole">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:actorInRole">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:actorInRole/lido:actor/lido:nameActorSet/lido:appellationValue">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:if test="not(@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:for-each select="../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:when test="count(.) = 1 and count(../../lido:roleActor) = 1"> (<xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:when test="position() = 1 and ../../lido:roleActor[position() = 1]"> (<xsl:value-of select="." />, </xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:when test="position() = last() and ../../lido:roleActor[position() = last()]"><xsl:value-of select="." />)</xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:if test="not(../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')])"> [<xsl:value-of select="$eventType" />]</xsl:if>
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:displayActorInRole">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:displayActorInRole">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:culture/lido:term[not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:eventMethod/lido:term[not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:eventMaterialsTech">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:materialsTech">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:materialsTech/lido:termMaterialsTech/lido:term[not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:when test="..[contains(lower-case(@lido:type), 'techn')]">
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:value-of select="concat(../@lido:type, ': ', .)"/>
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:when test="..[contains(lower-case(@lido:type), 'material')]">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:displayMaterialsTech">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:periodName/lido:term[not(@lido:addedSearchTerm = 'yes')]">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:eventDate">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="$creation and lido:date">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:date">
WEB-INF/jsp/lido2ese0.9.xsl:											<xsl:when test="lido:earliestDate = lido:latestDate">
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:value-of select="concat(lido:earliestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:value-of select="concat(lido:earliestDate, '-', lido:latestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="$creation and lido:displayDate">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:displayDate">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:date">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:date">
WEB-INF/jsp/lido2ese0.9.xsl:											<xsl:when test="lido:earliestDate = lido:latestDate">
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:value-of select="concat(lido:earliestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:value-of select="concat(lido:earliestDate, '-', lido:latestDate, ' [', $eventType, ']')"/>
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:displayDate">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:displayDate">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:for-each select="lido:eventPlace">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:place">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:place/lido:namePlaceSet/lido:appellationValue">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:if test="not(@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:when test="lido:displayPlace">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:for-each select="lido:displayPlace">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectRelationWrap/lido:relatedWorksWrap/lido:relatedWorksSet/lido:relatedWork/lido:object">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:when test="../../lido:relatedWorkRelType/lido:term ='part of'
WEB-INF/jsp/lido2ese0.9.xsl:								or ../../lido:relatedWorkRelType/lido:term ='Teil von'
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:value-of select="concat(lido:objectNote[1], ' [', lido:objectWebResource[1], ']')" />
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:when test="../../lido:relatedWorkRelType ='has part'
WEB-INF/jsp/lido2ese0.9.xsl:								or ../../lido:relatedWorkRelType ='hat Teil'
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:value-of select="concat(lido:objectNote[1], ' [', lido:objectWebResource[1], ']')" />
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:value-of select="concat(../../lido:relatedWorkRelType/lido:term[1], ': ', lido:objectNote[1], ' [', lido:objectWebResource[1], ']')" />
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:for-each select="lido:objectRelationWrap/lido:subjectWrap/lido:subjectSet">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:when test="lido:subject">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:for-each select="lido:subject">
WEB-INF/jsp/lido2ese0.9.xsl:									<xsl:variable name="extent"><xsl:value-of select="lido:extentSubject" /></xsl:variable>
WEB-INF/jsp/lido2ese0.9.xsl:										lido:subjectConcept
WEB-INF/jsp/lido2ese0.9.xsl:											lido:subjectConcept/lido:term[not(@lido:addedSearchTerm = 'yes')]
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:if test="lido:subjectConcept/lido:conceptID[contains(@lido:source, 'Iconclass')]">
WEB-INF/jsp/lido2ese0.9.xsl:											lido:subjectConcept/lido:term[@lido:addedSearchTerm = 'yes']
WEB-INF/jsp/lido2ese0.9.xsl:										lido:subjectActor/lido:actor
WEB-INF/jsp/lido2ese0.9.xsl:										| lido:subjectPlace/lido:place
WEB-INF/jsp/lido2ese0.9.xsl:											lido:subjectActor/lido:actor/lido:nameActorSet/lido:appellationValue
WEB-INF/jsp/lido2ese0.9.xsl:											| lido:subjectPlace/lido:place/lido:namePlaceSet/lido:appellationValue
WEB-INF/jsp/lido2ese0.9.xsl:											<xsl:if test="not(@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:										lido:subjectObject/lido:object
WEB-INF/jsp/lido2ese0.9.xsl:											lido:subjectObject/lido:object/lido:objectNote
WEB-INF/jsp/lido2ese0.9.xsl:										lido:subjectDate/lido:date
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:for-each select="lido:subjectDate/lido:date">
WEB-INF/jsp/lido2ese0.9.xsl:													<xsl:when test="lido:earliestDate = lido:latestDate">
WEB-INF/jsp/lido2ese0.9.xsl:														<xsl:value-of select="lido:earliestDate"/>
WEB-INF/jsp/lido2ese0.9.xsl:														<xsl:value-of select="concat(lido:earliestDate, '-', lido:latestDate)"/>
WEB-INF/jsp/lido2ese0.9.xsl:										lido:subjectEvent/lido:event
WEB-INF/jsp/lido2ese0.9.xsl:										<xsl:for-each select="lido:subjectEvent/lido:event">
WEB-INF/jsp/lido2ese0.9.xsl:												<xsl:value-of select="concat(lido:eventType/lido:term[1], ': ', lido:eventName/lido:appellationValue[1], ' (', lido:eventID, ')')"/>
WEB-INF/jsp/lido2ese0.9.xsl:										lido:subjectActor/lido:displayActor
WEB-INF/jsp/lido2ese0.9.xsl:										| lido:subjectDate/lido:displayDate
WEB-INF/jsp/lido2ese0.9.xsl:										| lido:subjectEvent/lido:displayEvent
WEB-INF/jsp/lido2ese0.9.xsl:										| lido:subjectPlace/lido:displayPlace
WEB-INF/jsp/lido2ese0.9.xsl:										| lido:subjectObject/lido:displayObject
WEB-INF/jsp/lido2ese0.9.xsl:											lido:subjectActor/lido:displayActor
WEB-INF/jsp/lido2ese0.9.xsl:											| lido:subjectDate/lido:displayDate
WEB-INF/jsp/lido2ese0.9.xsl:											| lido:subjectEvent/lido:displayEvent
WEB-INF/jsp/lido2ese0.9.xsl:											| lido:subjectPlace/lido:displayPlace
WEB-INF/jsp/lido2ese0.9.xsl:											| lido:subjectObject/lido:displayObject
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:when test="lido:displaySubject">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:for-each select="lido:displaySubject">
WEB-INF/jsp/lido2ese0.9.xsl:		<xsl:for-each select="lido:resourceViewDescription">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:value-of select="../../../../lido:descriptiveMetadata/@xml:lang" />
WEB-INF/jsp/lido2ese0.9.xsl:		<xsl:for-each select="lido:resourceViewDate">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:value-of select="../../../../lido:descriptiveMetadata/@xml:lang" />
WEB-INF/jsp/lido2ese0.9.xsl:		<xsl:for-each select="lido:resourceSource">
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:if test="lower-case(@lido:type) = 'photographer' or contains(lower-case(@lido:type), 'fotograf')">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:value-of select="concat(@lido:type, ': ', .)" />
WEB-INF/jsp/lido2ese0.9.xsl:		<xsl:for-each select="../lido:lidoRecID">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:value-of select="concat(@lido:type, ' ', ., ' [LIDO metadata]')" />
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:creditLine">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:creditLine">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:if test="lido:appellationValue/@xml:lang">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:value-of select="lido:appellationValue"/>
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:if test="not(lido:appellationValue/@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:if test="lido:appellationValue/@xml:lang">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:value-of select="lido:appellationValue"/>
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="../lido:descriptiveMetadata/lido:objectIdentificationWrap/lido:repositoryWrap/lido:repositorySet/lido:repositoryName/lido:legalBodyName/lido:appellationValue">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:if test="not(@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:		<xsl:for-each select="lido:recordWrap/lido:recordID">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:when test="../lido:recordSource/lido:legalBodyID"><xsl:value-of select="../lido:recordSource/lido:legalBodyID[1]" /></xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:otherwise><xsl:value-of select="../lido:recordSource/lido:legalBodyName/lido:appellationValue[1]" /></xsl:otherwise>
WEB-INF/jsp/lido2ese0.9.xsl:			   <xsl:value-of select="concat($legalBody, ' - ', @lido:type, ' ',$ID, ' [Metadata]')"/>						           
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:when test="lido:recordWrap/lido:recordRights/lido:creditLine">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:creditLine">
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:when test="lido:recordWrap/lido:recordRights/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:recordWrap/lido:recordRights/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:if test="not(lido:appellationValue/@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:if test="lido:appellationValue/@xml:lang">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:value-of select="concat(lido:appellationValue, ' [Metadata]')"/>
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:if test="not(@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:		<xsl:for-each select="lido:resourceID">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:when test="../lido:resourceSource[@lido:type='Fotoverwalter']"><xsl:value-of select="../lido:resourceSource[@lido:type='Fotoverwalter']" /></xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:when test="../lido:resourceSource"><xsl:value-of select="../lido:resourceSource[1]" /></xsl:when>
WEB-INF/jsp/lido2ese0.9.xsl:			   <xsl:value-of select="concat($legalBody, ' - ', @lido:type, ' ',$ID, ' [Resource]')"/>						           
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:when test="lido:rightsResource/lido:creditLine">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:rightsResource/lido:creditLine">
WEB-INF/jsp/lido2ese0.9.xsl:			<xsl:when test="lido:rightsResource/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:rightsResource/lido:rightsHolder/lido:legalBodyName">
WEB-INF/jsp/lido2ese0.9.xsl:					<xsl:if test="not(lido:appellationValue/@lido:pref = 'alternate')">
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:if test="lido:appellationValue/@xml:lang">
WEB-INF/jsp/lido2ese0.9.xsl:								<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
WEB-INF/jsp/lido2ese0.9.xsl:							<xsl:value-of select="concat(lido:appellationValue, ' [Resource]')"/>
WEB-INF/jsp/lido2ese0.9.xsl:				<xsl:for-each select="lido:resourceSource">
WEB-INF/jsp/lido2ese0.9.xsl:						<xsl:if test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:if>
WEB-INF/jsp/lidoeese.xsl:<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dcmitype="http://purl.org/dc/dcmitype/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:n="http://www.europeana.eu/schemas/ese/" xmlns:n2="http://www.lido-schema.org" xmlns:gml="http://www.opengis.net/gml" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="fn gml n2 xlink xs xsi xsl" xmlns="http://www.europeana.eu/schemas/ese/">
WEB-INF/jsp/lidoeese.xsl:	<xsl:template match="/lidoWrap">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:				<xsl:for-each select="lidoRecID">
WEB-INF/jsp/lidoeese.xsl:					<xsl:variable name="Vvar880_lidoRecID_string" as="xs:string" select="xs:string(.)"/>
WEB-INF/jsp/lidoeese.xsl:						<xsl:sequence select="$Vvar880_lidoRecID_string"/>
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/lidoeese.xsl:			<xsl:for-each select="lido">
WEB-INF/jsp/mapselection.jsp:	&nbsp;<img src="images/complete.png" style=" width:16px; margin-left: -5px;margin-right: 2px;"/><font size="0.9em;"><i>: LIDO complete mappings</i></font></p>
WEB-INF/jsp/report.jsp: int totallido=0;
WEB-INF/jsp/report.jsp:                totallido+=transformed;
WEB-INF/jsp/report.jsp:			           <tr><td style="padding-left:4px;padding-top:3px;vertical-align:bottom;"><b>Total LIDO Items:</b></td><td align="left" style="vertical-align:bottom;"><%=transformed %></td>
WEB-INF/jsp/report.jsp:			             <tr><td style="padding-left:4px;padding-top:3px;"><b>Total LIDO Items:</b></td><td align="left" style="vertical-align:bottom;padding-left:15px;"><%=totallido %></td>
WEB-INF/jsp/targetDefinition.json:	"xsd":          "lido-v0.9-proxy.xsd",
WEB-INF/jsp/targetDefinition.json:		"lido":		"http://www.lido-schema.org"
WEB-INF/jsp/targetDefinition.json:        "element":  "lidoWrap",
WEB-INF/jsp/targetDefinition.json:        "prefix":	"lido"
WEB-INF/jsp/targetDefinition.json:        "element":  "lido",
WEB-INF/jsp/targetDefinition.json:        "prefix":	"lido"
WEB-INF/jsp/targetDefinitionLIDO.json:	"xsd":          "lido-v0.7.xsd",
WEB-INF/jsp/targetDefinitionLIDO.json:    "namespace":    "lido",
WEB-INF/jsp/targetDefinitionLIDO.json:	"root":         "lido",
WEB-INF/jsp/transformselection.jsp:	        <li class="selected" title="active"><a href="#tab1"><em>Missing LIDO</em></a></li>
WEB-INF/jsp/transformselection.jsp:	&nbsp;<img src="images/complete.png" style=" width:16px; margin-left: -5px;margin-right: 2px;"/><font size="0.9em;"><i>: LIDO complete mappings</i></font></p>
WEB-INF/jsp/xmlPreviewError.jsp:	        <li class="selected"><a href="#tab1"><em>LIDO XML</em></a></li> 
WEB-INF/jsp/xmlPreviewFinal.jsp:	boolean isLido=du.isLido();
WEB-INF/jsp/xmlPreviewFinal.jsp:		if(!isLido)
WEB-INF/jsp/xmlPreviewFinal.jsp:	if(mappings == null && (!isLido)) {
WEB-INF/jsp/xmlPreviewFinal.jsp:		if(!isLido){
WEB-INF/jsp/xmlPreviewFinal.jsp:		File eseFile = new File(this.getServletContext().getRealPath(gr.ntua.ivml.mint.util.Config.get( "lido_to_ese_xsl")));
WEB-INF/jsp/xmlPreviewFinal.jsp:			if(!isLido){
WEB-INF/jsp/xmlPreviewFinal.jsp:	     <%if(!isLido){ %>
WEB-INF/jsp/xmlPreviewFinal.jsp:	        }//islIDO%>
WEB-INF/jsp/xmlPreviewPanel.jsp:	        <li><a href="#tab3"><em>Output XML (Lido)</em></a></li> 
WEB-INF/jsp/xmlPreviewRequest.jsp:   String lidoxsl="";
WEB-INF/jsp/xmlPreviewRequest.jsp:	   lidoxsl=	(String) request.getAttribute( "lidoXsl" );
WEB-INF/jsp/xmlPreviewRequest.jsp:	         <%if(lidoxsl.length()>10000){%>   
WEB-INF/jsp/xmlPreviewRequest.jsp:	        		StringEscapeUtils.escapeHtml(lidoxsl)
WEB-INF/jsp/xmlPreviewRequest.jsp:	        		StringEscapeUtils.escapeHtml(lidoxsl)
Binary file WEB-INF/lib/groovy-all-1.6.3.jar matches
Binary file WEB-INF/lib/truezip-6.jar matches
WEB-INF/src/createSchema.sql: ( 1, '2009-01-01', 'LidoToLido', 1, '', false, false);
WEB-INF/src/createSchema.sql:	-- handle automatically (like lido, museumdat etc)
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:	public Boolean isLido;
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:		if(this.isLido){
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:			du.setSchemaName("LIDO");
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:		if(this.isLido){
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:			du.setSchemaName("LIDO");
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:		if(this.isLido){
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:			du.setSchemaName("LIDO");
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:		if(this.isLido){
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:			du.setSchemaName("LIDO");
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:		if(this.isLido){
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:			du.setSchemaName("LIDO");
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:	public Boolean getIsLido() {
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:	        return this.isLido;
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:	  public void setIsLido(Boolean isLido) {
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Import.java:		    this.isLido=isLido;
WEB-INF/src/java/gr/ntua/ivml/mint/actions/ImportStatus.java:	public boolean isLido(){
WEB-INF/src/java/gr/ntua/ivml/mint/actions/ImportStatus.java:		return this.imp.isLido();
WEB-INF/src/java/gr/ntua/ivml/mint/actions/ItemPanel.java:		boolean lido;
WEB-INF/src/java/gr/ntua/ivml/mint/actions/ItemPanel.java:		public boolean isLido(){
WEB-INF/src/java/gr/ntua/ivml/mint/actions/ItemPanel.java:			return lido;
WEB-INF/src/java/gr/ntua/ivml/mint/actions/ItemPanel.java:							i.lido=du.isLido();
WEB-INF/src/java/gr/ntua/ivml/mint/actions/PreviewError.java:		File eseFile = new File(sc.getRealPath(Config.get( "lido_to_ese_xsl")));
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Publish.java:				if((tr.getStatus()=="OK" && !tr.isStale()) || su.isLido())
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Transform.java:    				//now check if LIDO complete
WEB-INF/src/java/gr/ntua/ivml/mint/actions/Transform.java:	    				  addActionError(" The <i>'"+m.getName()+"'</i> mappings you are trying to use for transformation are <a href=\"#\" onclick=\"ChangeTabs(0);\"><font color='red'>Missing</font></a> mandatory mappings to LIDO.");
WEB-INF/src/java/gr/ntua/ivml/mint/actions/XMLPreview.java:		transformedItem = t.transform(getItemPreview(), getLidoXsl());
WEB-INF/src/java/gr/ntua/ivml/mint/actions/XMLPreview.java:	 * Provide the Lido XSL for output. Needs to be able to find
WEB-INF/src/java/gr/ntua/ivml/mint/actions/XMLPreview.java:	public String getLidoXsl() {
WEB-INF/src/java/gr/ntua/ivml/mint/actions/XMLPreview.java:		File eseFile = new File(sc.getRealPath(Config.get( "lido_to_ese_xsl")));
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:				/*if(du.isLido())
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:							SchemaValidator.validate(source, SchemaValidator.LIDO);
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:									SchemaValidator.validate(source, SchemaValidator.LIDO);
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:			            //SchemaValidator.validate(source, SchemaValidator.LIDO);
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:							SchemaValidator.validate(source, SchemaValidator.LIDO);
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:				if(du.isLido()){
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:				if(du.isLido()){
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:				   setLidoLevelLabel();
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:				   lidoTransform();
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:	private void setLidoLevelLabel(){
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:		String xpath ="/lidoWrap/lido";
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:		String label="/lidoWrap/lido/descriptiveMetadata/objectIdentificationWrap/titleWrap/titleSet/appellationValue/text()";
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:	private void lidoTransform(){
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:	    //set Mapping for this tranformation the hardcoded LidoToLido in db with id=1
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:	    Mapping lido2lido=DB.getMappingDAO().getById(new Long(1), false);
WEB-INF/src/java/gr/ntua/ivml/mint/concurrent/UploadIndexer.java:	    t.setMapping(lido2lido);
WEB-INF/src/java/gr/ntua/ivml/mint/mapping/MappingVersionControl.java:			// first mapping version had static template, set root to lidoWrap and remove the template so that the mapping manager can rebuild it
WEB-INF/src/java/gr/ntua/ivml/mint/mapping/MappingVersionControl.java:			result = result.element("root", "lidoWrap");
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/DataUpload.java:	public boolean isLido(){
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/DataUpload.java:		if(this.schemaName!=null && this.schemaName.equalsIgnoreCase("LIDO"))
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java: * Subclass with the logic for the lido athena logic.
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:		return new PathIterator( getTransformations(), "/lidoWrap/lido");
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:	 * Convert from Lido to ESE.
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:			File lte = new File(Config.getRealPath( Config.get( "lido_to_ese_xsl")));
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:			int lidoItems = 0;
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:					lidoItems += 1;
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:					errorSrc = "Lido_to_Ese transformation";
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:					if(( lidoItems > 100 ) && (eseItems == 0 )) {
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:					if(( lidoItems == 100 ) && (eseItems == 0 )) {
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:					setStatusMessage( "Postprocessed " + lidoItems + " items of " + count + " (failed " + failed + ")");
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:					log.debug( "Postprocessed " + lidoItems + " items of " + count + " (failed " + failed + ")");
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:				processReport.append( "\nTransformed " + lidoItems + " lido records to " + eseItems + " ese records.\n" );
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:				postProcessOutput.putNextEntry( new ZipEntry( "lido_to_ese_report.txt" ));
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java:				setStatusMessage( "Postprocessed " + lidoItems + " items.");
WEB-INF/src/java/gr/ntua/ivml/mint/persistent/Publication.hbm.xml:			<discriminator formula="(select position( 'lido' in coalesce( target_schema,''))>0 from Publication p where p.publication_id = publication_id)" 
WEB-INF/src/java/gr/ntua/ivml/mint/test/PublicationTest.java:		p.setTargetSchema("some_lido");
WEB-INF/src/java/gr/ntua/ivml/mint/test/TestUploadIndexer.java:		du.setSchemaName( "SomeLidoClone");
WEB-INF/src/java/gr/ntua/ivml/mint/util/Import.java:	public boolean isLido(){
WEB-INF/src/java/gr/ntua/ivml/mint/util/Import.java:	   return du.isLido();	
WEB-INF/src/java/gr/ntua/ivml/mint/view/Import.java:	public boolean isLido(){
WEB-INF/src/java/gr/ntua/ivml/mint/view/Import.java:	   return du.isLido();	
WEB-INF/src/java/gr/ntua/ivml/mint/xml/transform/XMLNodeTransform.java:			//do ese and lido validations here
WEB-INF/src/java/gr/ntua/ivml/mint/xml/transform/XMLNodeTransform.java:			StreamSource lidoXml = new StreamSource( byteArrayInputStream);			
WEB-INF/src/java/gr/ntua/ivml/mint/xml/transform/XMLNodeTransform.java:			SchemaValidator.validate(lidoXml, SchemaValidator.LIDO );
WEB-INF/src/java/gr/ntua/ivml/mint/xml/transform/XMLNodeTransform.java:			lidovalidation="Successfull LIDO 0.9 validation!";
WEB-INF/src/java/gr/ntua/ivml/mint/xml/transform/XMLNodeTransform.java:				lidovalidation=ex.getMessage();
WEB-INF/src/java/gr/ntua/ivml/mint/xml/transform/XMLNodeTransform.java:	   			File eseFile = new File(Config.getRealPath(Config.get( "lido_to_ese_xsl")));
WEB-INF/src/java/mint.properties:lido_to_ese_xsl=WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl
WEB-INF/src/upgrade_sql_1_2.sql: ( 1, '2009-01-01', 'LidoToLido', 1, null, false, false);
athena.out:WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:  Provided for ATHENA project, 2010-09-17. 
athena.out:WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:WEB-INF/jsp/lido-v0.9-to-ese-v3.3-transform-v1.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:WEB-INF/jsp/lido2ese0.9.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:WEB-INF/jsp/lido2ese0.9.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:WEB-INF/jsp/lido2ese0.9.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:WEB-INF/src/java/gr/ntua/ivml/mint/persistent/EsePublication.java: * Subclass with the logic for the lido athena logic.
athena.out:schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:  Provided for ATHENA project, 2010-10-06. 
athena.out:schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<europeana:provider>ATHENA project</europeana:provider>
athena.out:schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<europeana:provider>ATHENA project</europeana:provider>
schemas/lido-draft-v0.9.xsd:<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:doc="http://www.mda.org.uk/spectrumXML/Documentation" xmlns:gml="http://www.opengis.net/gml" xmlns:lido="http://www.lido-schema.org" xmlns:xml="http://www.w3.org/XML/1998/namespace" targetNamespace="http://www.lido-schema.org" elementFormDefault="qualified" attributeFormDefault="qualified">
schemas/lido-draft-v0.9.xsd:		<xsd:documentation>LIDO - Lightweight Information Describing Objects</xsd:documentation>
schemas/lido-draft-v0.9.xsd:		<xsd:documentation>LIDO DRAFT v0.9</xsd:documentation>
schemas/lido-draft-v0.9.xsd:		<xsd:documentation>LIDO draft version: 2010-03-23: lido-draft-v0.9.xsd</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="actorID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="nameActorSet" type="lido:appellationComplexType" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="nationalityActor" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="genderActor" type="lido:textComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="actor" type="lido:actorComplexType"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="roleActor" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="attributionQualifierActor" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="extentActor" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayActorInRole" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA lite v1.1: displayCreator corresponds partly / is generalized into lido:displayActor</xsd:documentation>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: displayCreator corresponds partly / is generalized into lido:displayActor</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="actorInRole" type="lido:actorInRoleComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayActor" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA lite v1.1: displayCreator corresponds partly to lido:displayActor (without role information)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: displayCreator corresponds partly to lido:displayActor (without role information)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="actor" type="lido:actorComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:rightsWorkWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:recordWrap"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:resourceWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: e.g. title, nameCreator, locationName correspond to lido:appellationValue</xsd:documentation>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: e.g. title, repositoryName, nameActor, nameLocation correspond to lido:appellationValue</xsd:documentation>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: e.g. sourceTitle, sourceNameCreator correspond to lido:sourceAppellation</xsd:documentation>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: e.g. sourceTitle, sourceNameActor correspond to lido:sourceAppellation</xsd:documentation>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:						<xsd:documentation>CDWA Lite v1.1: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:						<xsd:documentation>museumdat v1.0: classification (assigns a term) corresponds to lido:classification (assigns a concept with its identifiers and various terms)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:							<xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v0.9.xsd:								<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="conceptID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="term" type="lido:termComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: indexingDatesSet is generalized and refined into lido:dateComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: indexingDates is refined into lido:dateComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayDate" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA lite v1.1: displayCreationDate is generalized into lido:displayDate</xsd:documentation>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: displayCreationDate is generalized into lido:displayDate</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="date" type="lido:dateComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectClassificationWrap"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectIdentificationWrap"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:eventWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectRelationWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="descriptiveNoteValue" type="lido:textComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="sourceDescriptiveNote" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="displayState" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="displayEdition" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="sourceStateEdition" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: indexingEventSet is extended and refined into lido:eventComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventType" type="lido:conceptComplexType">
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: eventType is refined into lido:eventType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="roleInEvent" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventName" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventActor" type="lido:actorInRoleSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="culture" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventDate" type="lido:dateSetComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="periodName" type="lido:conceptComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:placeSetComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventMethod" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventMaterialsTech" type="lido:materialsTechSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="thingPresent" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="relatedEventSet" type="lido:relatedEventSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="eventDescriptionSet" type="lido:descriptiveNoteComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayEvent" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="event" type="lido:eventComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: eventWrap corresponds to lido:eventWrap</xsd:documentation>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="eventSet" type="lido:eventSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:type" use="required"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:source"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:							<xsd:extension base="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:								<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="legalBodyID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="legalBodyName" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="legalBodyWeblink" type="lido:webResourceComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:	<xsd:element name="lido">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="lidoRecID" type="lido:identifierComplexType" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:						<xsd:documentation>A unique lido record identification, preferably composed of an identifier for the contributor and a record identification in the contributor's (local) system.</xsd:documentation>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="category" type="lido:conceptComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:descriptiveMetadata" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:administrativeMetadata" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:	<xsd:element name="lidoWrap">
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:lido" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="extentMaterialsTech" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="sourceMaterialsTech" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayMaterialsTech" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="materialsTech" type="lido:materialsTechComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectWorkTypeWrap"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:classificationWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="objectWebResource" type="lido:webResourceComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="objectID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: locRelatedWork@relWorkID corresponds to lido:objectID</xsd:documentation>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: locRelatedWork@relWorkID corresponds to lido:objectID</xsd:documentation>
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="objectDescriptionSet" type="lido:descriptiveNoteComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: identificationWrap corresponds to lido:objectIdentificationWrap</xsd:documentation>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:titleWrap"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:inscriptionsWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:repositoryWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:displayStateEditionWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectDescriptionWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:objectMeasurementsWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:type" use="required"/>
schemas/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="extentMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="qualifierMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="formatMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="shapeMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="scaleMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayObjectMeasurements" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="objectMeasurements" type="lido:objectMeasurementsComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="objectMeasurementsSet" type="lido:objectMeasurementsSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: relationWrap corresponds to lido:objectRelationWrap</xsd:documentation>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:subjectWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element ref="lido:relatedWorksWrap" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayObject" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="object" type="lido:objectComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="objectWorkType" type="lido:conceptComplexType" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:						<xsd:documentation>CDWA Lite v1.1: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:						<xsd:documentation>museumdat v1.0: objectWorkType (assigns a term) corresponds to lido:objectWorkType (assigns a concept with its identifiers and various terms)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: locationSet corresponds partly to lido:placeComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: indexingLocationWrap is refined into lido:placeComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="placeID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="namePlaceSet" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: locationName corresponds partly to lido:namePlaceSet/lido:appellationComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:gmlComplexType">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="partOfPlace" type="lido:placeComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:politicalEntity">
schemas/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:geographicalEntity">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displayPlace" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="place" type="lido:placeComplexType" minOccurs="0"/>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>Note: The metadata information contains the reference to the "lido"-metadata set but may also be constituted by reference to an "object data sheet" in an online database.</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="recordInfoID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="recordInfoLink" type="lido:webResourceComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="recordRelID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="recordMetadataLoc" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:source"/>
schemas/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="recordID" type="lido:identifierComplexType" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="recordType" type="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="recordSource" type="lido:legalBodyRefComplexType" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="recordRights" type="lido:rightsComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="recordInfoSet" type="lido:recordInfoSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="relatedEvent" type="lido:eventSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="relatedEventRelType" type="lido:conceptComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="relatedWork" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="relatedWorkRelType" type="lido:conceptComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="relatedWorksSet" type="lido:relatedWorksSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: locationSet is partly a subset of lido:repositorySet</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: repositorySet - refined into lido:repositorySet (see repositoryName and repositoryLocation)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="repositoryName" type="lido:legalBodyRefComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>CDWA Lite v1.1: locationName corresponds partly to lido:repositoryName</xsd:documentation>
schemas/lido-draft-v0.9.xsd:					<xsd:documentation>museumdat v1.0: repositoryName - refined into lido:repositoryName</xsd:documentation>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="repositoryLocation" type="lido:placeComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>CDWA Lite v1.1: locationWrap is partly corresponding lido:repositorySet</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>museumdat v1.0: repositoryWrap - refined into lido:repositoryWrap (see repositoryName and repositoryLocation)</xsd:documentation>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="repositorySet" type="lido:repositorySetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:webResourceComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="resourceID" type="lido:identifierComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="resourceType" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="rightsResource" type="lido:rightsComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="resourceViewType" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:						<xsd:element name="relatedResourceRelType" type="lido:textComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:						<xsd:element name="labelRelatedResource" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:					<xsd:attribute ref="lido:linkscheme"/>
schemas/lido-draft-v0.9.xsd:						<xsd:extension base="lido:textComplexType">
schemas/lido-draft-v0.9.xsd:							<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="resourceSet" type="lido:resourceSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="rightsType" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="rightsDate" type="lido:dateComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="rightsHolder" type="lido:legalBodyRefComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="creditLine" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:				<xsd:element name="rightsWorkSet" type="lido:rightsComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:						<xsd:documentation>CDWA Lite v1.1: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rightsComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:						<xsd:documentation>museumdat v1.0: rightsWork / rightsResource - semantics of the simple text elements correspond to the structured lido:rightsComplexType</xsd:documentation>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="extentSubject" type="lido:textComplexType" minOccurs="0">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="subjectConcept" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="subjectActor" type="lido:actorSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="subjectDate" type="lido:dateSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="subjectEvent" type="lido:eventSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="subjectPlace" type="lido:placeSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="subjectObject" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:		<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:			<xsd:element name="displaySubject" type="lido:textComplexType" minOccurs="0" maxOccurs="unbounded">
schemas/lido-draft-v0.9.xsd:			<xsd:element name="subject" type="lido:subjectComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:				<xsd:element name="subjectSet" type="lido:subjectSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-draft-v0.9.xsd:			<xsd:documentation>The attributes are to be used as follows:pref - has allowable values:  preferred | alternate. Indicates whether it is the preferred name of the concept / term, or an alternative name.xml:lang - specifies the language of the concept / term.addedSearchTerm - has allowable values: yes | no. Default is "no". imported = "yes" means that the item includes an additional item (e.g. synonym, generic term) from the standard vocabulary used, which is included only for retrieval purposes.encodinganalog and label - used to indicate the category of data from the source system from the data values were taken. encodinganalog refers to the internal label for the external field name. The reference format is specified in lidoWrap.The attributes are optional.</xsd:documentation>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:addedSearchTerm"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v0.9.xsd:							<xsd:extension base="lido:appellationComplexType">
schemas/lido-draft-v0.9.xsd:								<xsd:attribute ref="lido:type"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v0.9.xsd:				<xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:<xsd:schema targetNamespace="http://www.lido-schema.org" elementFormDefault="qualified" attributeFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:doc="http://www.mda.org.uk/spectrumXML/Documentation" xmlns:gml="http://www.opengis.net/gml" xmlns:lido="http://www.lido-schema.org">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="actorID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="nameActorSet" maxOccurs="unbounded" type="lido:appellationComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="vitalDatesActor" minOccurs="0" type="lido:dateComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="genderActor" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="actor" type="lido:actorComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="attributionQualifierActor" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="extentActor" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayActorInRole" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="actorInRole" minOccurs="0" type="lido:actorInRoleComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayActor" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="actor" minOccurs="0" type="lido:actorComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element maxOccurs="1" minOccurs="0" ref="lido:rightsWorkWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element ref="lido:recordWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:resourceWrap"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="conceptID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="term" maxOccurs="unbounded" minOccurs="0" type="lido:termComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:source"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:source"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayDate" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="date" minOccurs="0" type="lido:dateComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element ref="lido:objectClassificationWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element ref="lido:objectIdentificationWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:eventWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:objectRelationWrap"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="descriptiveNoteID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="descriptiveNoteValue" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="sourceDescriptiveNote" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element name="displayState" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element name="displayEdition" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element name="sourceStateEdition" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:documentation>How to record: Elements with data values are accompanied by the attributes encodinganalog and label to indicate the format of the data source from which the data were migrated. The attribute encodinganalog refers to the internal field label of the source database. The source format is indicated in the attribute relatedencoding of the lidoWrap </xsd:documentation>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="eventID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="eventType" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="roleInEvent" maxOccurs="unbounded" minOccurs="0" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="eventName" maxOccurs="unbounded" minOccurs="0" type="lido:appellationComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:actorInRoleSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="eventDate" minOccurs="0" type="lido:dateSetComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:placeSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:materialsTechSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:objectSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:relatedEventSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="eventDescriptionSet" maxOccurs="unbounded" minOccurs="0" type="lido:descriptiveNoteComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayEvent" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="event" minOccurs="0" type="lido:eventComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:eventSetComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute use="required" ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:source"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:                    <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:                      <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:                      <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:              <xsd:element name="inscriptionDescription" maxOccurs="unbounded" minOccurs="0" type="lido:descriptiveNoteComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="legalBodyID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="legalBodyName" maxOccurs="unbounded" minOccurs="0" type="lido:appellationComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="legalBodyWeblink" maxOccurs="unbounded" minOccurs="0" type="lido:webResourceComplexType">
schemas/lido-draft-v1.0.xsd:  <xsd:element name="lido">
schemas/lido-draft-v1.0.xsd:        <xsd:element name="lidoRecID" maxOccurs="unbounded" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:documentation>Definition: A unique lido record identification preferably composed of an identifier for the contributor and a record identification in the contributor's (local) system.</xsd:documentation>
schemas/lido-draft-v1.0.xsd:        <xsd:element name="objectPublishedID" minOccurs="0" maxOccurs="unbounded" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element name="category" minOccurs="0" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element maxOccurs="unbounded" ref="lido:descriptiveMetadata"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element maxOccurs="unbounded" ref="lido:administrativeMetadata"/>
schemas/lido-draft-v1.0.xsd:      <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:  <xsd:element name="lidoWrap">
schemas/lido-draft-v1.0.xsd:        <xsd:element maxOccurs="unbounded" ref="lido:lido"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="extentMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="sourceMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayMaterialsTech" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="materialsTech" maxOccurs="1" minOccurs="0" type="lido:materialsTechComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="measurementType" maxOccurs="unbounded" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="measurementUnit" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="measurementValue" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element ref="lido:objectWorkTypeWrap">
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:classificationWrap">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="objectWebResource" maxOccurs="unbounded" minOccurs="0" type="lido:webResourceComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="objectID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element name="objectDescriptionSet" maxOccurs="unbounded" minOccurs="0" type="lido:descriptiveNoteComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element ref="lido:titleWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:inscriptionsWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:repositoryWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:displayStateEditionWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:objectDescriptionWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:objectMeasurementsWrap"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:measurementsSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayObjectMeasurements" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="objectMeasurements" maxOccurs="1" minOccurs="0" type="lido:objectMeasurementsComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:objectMeasurementsSetComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:subjectWrap"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element minOccurs="0" ref="lido:relatedWorksWrap"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayObject" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="object" maxOccurs="1" minOccurs="0" type="lido:objectComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="placeID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="namePlaceSet" maxOccurs="unbounded" minOccurs="0" type="lido:appellationComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:gmlComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="partOfPlace" maxOccurs="unbounded" minOccurs="0" type="lido:placeComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:politicalEntity">
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:geographicalEntity">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displayPlace" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="place" minOccurs="0" type="lido:placeComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:documentation>Notes: The metadata information contains the reference to the "lido"-metadata set but may also be constituted by reference to an "object data sheet" in an online database.</xsd:documentation>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="recordInfoID" maxOccurs="unbounded" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="recordInfoLink" maxOccurs="unbounded" minOccurs="0" type="lido:webResourceComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element name="recordID" maxOccurs="unbounded" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:        <xsd:element name="recordType" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:legalBodyRefComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:documentation>Definition: Information about rights regarding the content provided in this LIDO record.</xsd:documentation>
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:rightsComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element name="recordInfoSet" maxOccurs="unbounded" minOccurs="0" type="lido:recordInfoSetComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="relatedEvent" minOccurs="0" type="lido:eventSetComplexType"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="relatedEventRelType" minOccurs="0" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="relatedWork" minOccurs="0" type="lido:objectSetComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="relatedWorkRelType" minOccurs="0" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:relatedWorkSetComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="repositoryName" minOccurs="0" type="lido:legalBodyRefComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="repositoryLocation" minOccurs="0" type="lido:placeComplexType">
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:type">
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:        <xsd:element name="repositorySet" maxOccurs="unbounded" minOccurs="0" type="lido:repositorySetComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="resourceID" minOccurs="0" type="lido:identifierComplexType">
schemas/lido-draft-v1.0.xsd:                  <xsd:extension base="lido:webResourceComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:element name="resourceMeasurementsSet" minOccurs="0" maxOccurs="unbounded" type="lido:measurementsSetComplexType">
schemas/lido-draft-v1.0.xsd:          <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="resourceType" maxOccurs="unbounded" minOccurs="0" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="resourceRelType" maxOccurs="unbounded" minOccurs="0" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="resourcePerspective" maxOccurs="unbounded" minOccurs="0" type="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:legalBodyRefComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:rightsComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:resourceSetComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="rightsType" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="rightsDate" minOccurs="0" type="lido:dateComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:legalBodyRefComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="creditLine" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:rightsComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="extentSubject" minOccurs="0" maxOccurs="unbounded" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:conceptComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:actorSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:dateSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:eventSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:placeSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:            <xsd:extension base="lido:objectSetComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:    <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:      <xsd:element name="displaySubject" maxOccurs="unbounded" minOccurs="0" type="lido:textComplexType">
schemas/lido-draft-v1.0.xsd:      <xsd:element name="subject" minOccurs="0" type="lido:subjectComplexType">
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:subjectSetComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:addedSearchTerm"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd:              <xsd:extension base="lido:appellationComplexType">
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:type"/>
schemas/lido-draft-v1.0.xsd:                <xsd:attribute ref="lido:sortorder"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:pref"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:encodinganalog"/>
schemas/lido-draft-v1.0.xsd:        <xsd:attribute ref="lido:label"/>
schemas/lido-draft-v1.0.xsd.conf:	"xsd":          "lido-v0.9-proxy.xsd",
schemas/lido-draft-v1.0.xsd.conf:		"lido":		"http://www.lido-schema.org"
schemas/lido-draft-v1.0.xsd.conf:        "element":  "lidoWrap",
schemas/lido-draft-v1.0.xsd.conf:        "prefix":	"lido"
schemas/lido-draft-v1.0.xsd.conf:        "element":  "lido",
schemas/lido-draft-v1.0.xsd.conf:        "prefix":	"lido"
schemas/lido-v0.9-proxy.xsd:<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:lido="http://www.lido-schema.org" targetNamespace="http://www.lido-schema.org" elementFormDefault="qualified" attributeFormDefault="unqualified">
schemas/lido-v0.9-proxy.xsd:	<xsd:redefine schemaLocation="lido-draft-v0.9.xsd">
schemas/lido-v0.9-proxy.xsd:				<xsd:restriction base="lido:eventComplexType">
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventID" type="lido:identifierComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventType" type="lido:customConcept"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="roleInEvent" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventName" type="lido:appellationComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventActor" type="lido:actorInRoleSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="culture" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventDate" type="lido:dateSetComplexType" minOccurs="0"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="periodName" type="lido:conceptComplexType" minOccurs="0"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventPlace" type="lido:placeSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventMethod" type="lido:conceptComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventMaterialsTech" type="lido:materialsTechSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="thingPresent" type="lido:objectSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="relatedEventSet" type="lido:relatedEventSetComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:						<xsd:element name="eventDescriptionSet" type="lido:descriptiveNoteComplexType" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd:			<xsd:restriction base="lido:termComplexType">
schemas/lido-v0.9-proxy.xsd:			<xsd:restriction base="lido:conceptComplexType">
schemas/lido-v0.9-proxy.xsd:					<xsd:element name="conceptID" type="lido:identifierComplexType" minOccurs="0"/>
schemas/lido-v0.9-proxy.xsd:					<xsd:element name="term" type="lido:customTerm" minOccurs="0" maxOccurs="unbounded"/>
schemas/lido-v0.9-proxy.xsd.conf:	"xsd":          "lido-v0.9-proxy.xsd",
schemas/lido-v0.9-proxy.xsd.conf:		"lido":		"http://www.lido-schema.org"
schemas/lido-v0.9-proxy.xsd.conf:        "element":  "lidoWrap",
schemas/lido-v0.9-proxy.xsd.conf:        "prefix":	"lido"
schemas/lido-v0.9-proxy.xsd.conf:        "element":  "lido",
schemas/lido-v0.9-proxy.xsd.conf:        "prefix":	"lido"
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:  XSL Transform to convert LIDO XML data, according to http://www.lido-schema.org/schema/v0.9/lido-v0.9.xsd, 
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:	xmlns:ns0="http://www.lido-schema.org" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" 
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:	xmlns:lido="http://www.lido-schema.org" 
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:	exclude-result-prefixes="lido xs fn">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:for-each select="lido:lidoWrap/lido:lido">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:when test="contains(lido:administrativeMetadata/lido:recordWrap/lido:recordType, '/multipleResources') 
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type='image_thumb'][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type='image_thumb'][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="../../../../lido:descriptiveMetadata">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="../../../..//lido:term[@lido:addedSearchTerm = 'yes'][string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../../..//lido:appellationValue[(@lido:pref = 'alternate')][string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../../..//lido:legalBodyName[not(position() = 1)]/lido:appellationValue[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../../..//lido:partOfPlace//lido:appellationValue[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../../..//lido:placeClassification/lido:term[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:value-of select="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type']/lido:term[position() = 1]" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:value-of select="../../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type'][1]/lido:term[string-length(.)&gt;0][1]" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="../../../lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[string-length(.)&gt;0][1]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="../../../lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:if test="not(../../../lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink)">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test="contains(lido:administrativeMetadata/lido:recordWrap/lido:recordType, '/multipleResources')">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet[count(not(lido:linkResource='')) &gt; 0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="../../../lido:descriptiveMetadata">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="../../..//lido:term[@lido:addedSearchTerm = 'yes'][string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../..//lido:appellationValue[@lido:pref = 'alternate'][string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../..//lido:legalBodyName[not(position() = 1)]/lido:appellationValue[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../..//lido:partOfPlace//lido:appellationValue[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| ../../..//lido:placeClassification/lido:term[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:linkResource[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:value-of select="../../../lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type'][1]/lido:term[string-length(.)&gt;0][1]" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="../..//lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[string-length(.)&gt;0][1]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="../..//lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:if test="not(../..//lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink)">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:linkResource[string-length(.)&gt;0][1]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:descriptiveMetadata">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:administrativeMetadata">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:administrativeMetadata">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:resourceWrap/lido:resourceSet[count(not(lido:linkResource='')) &gt; 0][1]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select=".//lido:term[@lido:addedSearchTerm = 'yes'][string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| .//lido:appellationValue[@lido:pref = 'alternate'][string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| .//lido:legalBodyName[not(position() = 1)]/lido:appellationValue[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| .//lido:partOfPlace//lido:appellationValue[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						| .//lido:placeClassification/lido:term[string-length(.)&gt;0]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type = 'image_thumb'][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:value-of select="lido:descriptiveMetadata/lido:objectClassificationWrap/lido:classificationWrap/lido:classification[@lido:type = 'europeana:type'][1]/lido:term[string-length(.)&gt;0][1]" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[string-length(.)&gt;0][1]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:administrativeMetadata/lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:when test="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type = 'image_master'][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[@lido:type = 'image_master'][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:when test="lido:administrativeMetadata/lido:recordWrap/lido:recordInfoSet/lido:recordInfoLink[string-length(.)&gt;0]" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:for-each select="lido:administrativeMetadata/lido:resourceWrap/lido:resourceSet/lido:linkResource[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:titleWrap/lido:titleSet/lido:appellationValue[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:when test=" @lido:pref = 'alternate'">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:objectWorkTypeWrap/lido:objectWorkType/lido:term[string-length(.)&gt;0][not(@lido:addedSearchTerm = 'yes')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:classificationWrap/lido:classification[not(contains(@lido:type, 'europeana:')) and not(contains(@lido:type, 'euroepana:'))]/lido:term[string-length(.)&gt;0][not(@lido:addedSearchTerm = 'yes')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test="lower-case(../@lido:type) = 'colour'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								or lower-case(../@lido:type) = 'age'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								or lower-case(../@lido:type) = 'object-status'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:if test="../@lido:type"> (<xsl:value-of select="../@lido:type" />)</xsl:if>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:objectDescriptionWrap/lido:objectDescriptionSet/lido:descriptiveNoteValue[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:if test="../@lido:type">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:value-of select="concat(../@lido:type, ': ')"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:inscriptionsWrap/lido:inscriptions[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="@lido:type"><xsl:value-of select="." /></xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:displayStateEditionWrap/*[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:repositoryWrap/lido:repositorySet[not(@lido:type='former')]/lido:workID[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						   <xsl:value-of select="concat(@lido:type, ' ',.)"/>						           
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectIdentificationWrap/lido:repositoryWrap/lido:repositorySet[not(.//lido:appellationValue='')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="@lido:repositoryType='former' and ($desclang eq 'de' or $desclang eq 'deu' or $desclang eq 'ger')">Frühere Aufbewahrung/Standort: </xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="@lido:repositoryType='former'">Former Repository/Location: </xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						   <xsl:value-of select="concat($qualifier, lido:repositoryName/lido:legalBodyName[count(not(lido:appellationValue='')) &gt; 0][1]/lido:appellationValue[1], ' ', lido:repositoryLocation/lido:namePlaceSet[count(not(lido:appellationValue='')) &gt; 0][1]/lido:appellationValue[1])"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:objectIdentificationWrap/lido:objectMeasurementsWrap/lido:objectMeasurementsSet">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="lido:objectMeasurements[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:for-each select="lido:objectMeasurements[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:when test="lido:qualifierMeasurements[string-length(.)&gt;0]"><xsl:value-of select="concat(lido:qualifierMeasurements[string-length(.)&gt;0][1], ' ')" /></xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:measurementsSet[string-length(@lido:value)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:value-of select="concat(@lido:type, ': ', @lido:value, ' ', @lido:unit)"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="../lido:extentMeasurements[string-length(.)&gt;0]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:formatMeasurements[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:for-each select="../lido:extentMeasurements[string-length(.)&gt;0]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:shapeMeasurements[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:for-each select="../lido:extentMeasurements[string-length(.)&gt;0]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:scaleMeasurements[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:for-each select="../lido:extentMeasurements[string-length(.)&gt;0]"><xsl:value-of select="concat(' (', ., ')')" /></xsl:for-each>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="lido:displayObjectMeasurements[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:displayObjectMeasurements[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectClassificationWrap/lido:classificationWrap/lido:classification[lower-case(../@lido:type) = 'colour'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								or lower-case(../@lido:type) = 'age'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								or lower-case(../@lido:type) = 'object-status']/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:value-of select="../@lido:type" />: <xsl:value-of select="."/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:eventWrap/lido:eventSet/lido:event">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:variable name="eventType" select="lido:eventType/lido:term[string-length(.)&gt;0][1]"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:eventActor">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="$creation and lido:actorInRole">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:actorInRole/lido:actor/lido:nameActorSet/lido:appellationValue[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:if test="not(@lido:pref = 'alternate')">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="count(not(.='')) = 1 and count(../../lido:roleActor[not(lido:term='')]) = 1"> (<xsl:value-of select="." />)</xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="position() = 1 and ../../lido:roleActor[string-length(lido:term)&gt;0][position() = 1]"> (<xsl:value-of select="." />, </xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="position() = last() and ../../lido:roleActor[string-length(lido:term)&gt;0][position() = last()]"><xsl:value-of select="." />)</xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:if test="not(../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0])"> [<xsl:value-of select="$eventType" />]</xsl:if>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="$creation and lido:displayActorInRole">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:displayActorInRole[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="not($acquisition) and lido:actorInRole">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:actorInRole/lido:actor/lido:nameActorSet/lido:appellationValue[not(@lido:pref = 'alternate')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="count(not(.='')) = 1 and count(../../lido:roleActor[not(lido:term='')]) = 1"> (<xsl:value-of select="." />)</xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="position() = 1 and ../../lido:roleActor[string-length(lido:term)&gt;0][position() = 1]"> (<xsl:value-of select="." />, </xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="position() = last() and ../../lido:roleActor[string-length(lido:term)&gt;0][position() = last()]"><xsl:value-of select="." />)</xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:if test="not(../../../lido:roleActor/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0])"> [<xsl:value-of select="$eventType" />]</xsl:if>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="not($acquisition) and lido:displayActorInRole">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:displayActorInRole[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:culture/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:eventMethod/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:eventMaterialsTech">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="lido:materialsTech">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:materialsTech/lido:termMaterialsTech/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:when test="..[contains(lower-case(@lido:type), 'techn')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(../@lido:type, ': ', .)"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:when test="..[contains(lower-case(@lido:type), 'material')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="lido:displayMaterialsTech">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:displayMaterialsTech[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:periodName/lido:term[not(@lido:addedSearchTerm = 'yes')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:eventDate">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="$creation and lido:date">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:date[string-length(lido:earliestDate)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:when test="lido:earliestDate = lido:latestDate">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(lido:earliestDate, ' [', $eventType, ']')"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(lido:earliestDate, '/', lido:latestDate, ' [', $eventType, ']')"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="$creation and lido:displayDate">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:displayDate[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="lido:date">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:date[string-length(lido:earliestDate)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:when test="lido:earliestDate = lido:latestDate">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(lido:earliestDate, ' [', $eventType, ']')"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(lido:earliestDate, '/', lido:latestDate, ' [', $eventType, ']')"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="lido:displayDate">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:displayDate[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:for-each select="lido:eventPlace">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="not($acquisition) and lido:place">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:place/lido:namePlaceSet/lido:appellationValue[not(@lido:pref = 'alternate')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:when test="not($acquisition) and lido:displayPlace">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:displayPlace[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectRelationWrap/lido:relatedWorksWrap/lido:relatedWorksSet[count(not(lido:relatedWork/lido:object/lido:objectNote='')) &gt; 0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test="lido:relatedWorkRelType/lido:term ='part of'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								or lido:relatedWorkRelType/lido:term ='Teil von'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:relatedWork">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:object">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:for-each select="lido:objectNote[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:													<xsl:when test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="count(../lido:objectNote[not(.='')]) = 1">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:if test="lido:objectWebResource[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(' [', lido:objectWebResource[string-length(.)&gt;0][1], ']')" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test="lido:relatedWorkRelType ='has part'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								or lido:relatedWorkRelType ='hat Teil'
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:relatedWork">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:object">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:for-each select="lido:objectNote[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:													<xsl:when test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="count(../lido:objectNote[not(.='')]) = 1">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:if test="lido:objectWebResource[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(' [', lido:objectWebResource[string-length(.)&gt;0][1], ']')" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test=".//lido:objectNote[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:when test="lido:relatedWorkRelType/lido:term"><xsl:value-of select="concat(' [', lido:relatedWorkRelType/lido:term[1], ']')" /></xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:for-each select="lido:relatedWork">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:object">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:for-each select="lido:objectNote[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:													<xsl:when test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:when>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:when test="count(../lido:objectNote[not(.='')]) = 1">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											<xsl:if test="lido:objectWebResource[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(' [', lido:objectWebResource[string-length(.)&gt;0][1], ']')" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:for-each select="lido:objectRelationWrap/lido:subjectWrap/lido:subjectSet">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test="lido:subject">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:for-each select="lido:subject">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:variable name="extent"><xsl:value-of select="lido:extentSubject" /></xsl:variable>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectConcept[count(not(lido:term='')) &gt; 0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectConcept/lido:term[string-length(.)&gt;0][not(@lido:addedSearchTerm = 'yes')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:if test="lido:subjectConcept/lido:conceptID[contains(@lido:source, 'Iconclass')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:											lido:subjectConcept/lido:term[string-length(.)&gt;0][@lido:addedSearchTerm = 'yes'][1]
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectActor/lido:actor">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectActor/lido:actor/lido:nameActorSet/lido:appellationValue[not(@lido:pref = 'alternate')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectActor/lido:displayActor">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectActor/lido:displayActor[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectPlace/lido:place">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectPlace/lido:place/lido:namePlaceSet/lido:appellationValue[not(@lido:pref = 'alternate')][string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectPlace/lido:displayPlace">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectPlace/lido:displayPlace[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectObject/lido:object">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectObject/lido:object/lido:objectNote[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectObject/lido:displayObject">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectObject/lido:displayObject[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectDate/lido:date">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectDate/lido:date[string-length(lido:earliestDate)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:													<xsl:when test="lido:earliestDate = lido:latestDate">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:														<xsl:value-of select="lido:earliestDate"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:														<xsl:value-of select="concat(lido:earliestDate, '-', lido:latestDate)"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectDate/lido:displayDate">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectDate/lido:displayDate[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectEvent/lido:event">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectEvent/lido:event[count(not(lido:eventName/lido:appellationValue='')) &gt; 0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:												<xsl:value-of select="concat(lido:eventType/lido:term[1], ': ', lido:eventName/lido:appellationValue[1], ' (', lido:eventID, ')')"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:									<xsl:when test="lido:subjectEvent/lido:displayEvent">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:										<xsl:for-each select="lido:subjectEvent/lido:displayEvent[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:when test="lido:displaySubject">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:for-each select="lido:displaySubject[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:					<xsl:value-of select="../../../lido:descriptiveMetadata/@xml:lang" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:		<xsl:for-each select="lido:resourceViewDescription[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:		<xsl:for-each select="lido:resourceViewDate[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:		<xsl:for-each select="lido:resourceSource[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:if test="lower-case(@lido:type) = 'photographer' or contains(lower-case(@lido:type), 'fotograf')">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:value-of select="concat(@lido:type, ': ', .)" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:creditLine[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:creditLine[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsType[string-length(.)&gt;0] and not(lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName)">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsType[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:when test="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:for-each select="lido:rightsWorkWrap/lido:rightsWorkSet/lido:rightsHolder/lido:legalBodyName[not(lido:appellationValue/@lido:pref = 'alternate')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:if test="lido:appellationValue/@xml:lang">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:if test="../../lido:rightsType[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:value-of select="concat(../../lido:rightsType[string-length(.)&gt;0][1], ': ')" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:value-of select="lido:appellationValue"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:		<xsl:for-each select="lido:recordWrap/lido:recordID[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			   <xsl:value-of select="concat(@lido:type, ' ',. , ' [Metadata]')"/>						           
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:		<xsl:for-each select="lido:recordWrap/lido:recordSource/lido:legalBodyName/lido:appellationValue[not(@lido:pref = 'alternate')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:		<xsl:variable name="resourceSource" select="../lido:resourceSource[1]" />	 
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:		<xsl:for-each select="lido:resourceID[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:when test="lido:rightsResource/lido:creditLine[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:for-each select="lido:rightsResource/lido:creditLine[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:when test="lido:rightsResource/lido:rightsType[string-length(.)&gt;0] and not(lido:rightsResource/lido:rightsHolder/lido:legalBodyName)">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:for-each select="lido:rightsResource/lido:rightsType[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:			<xsl:when test="lido:rightsResource/lido:rightsHolder/lido:legalBodyName">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:for-each select="lido:rightsResource/lido:rightsHolder/lido:legalBodyName[not(lido:appellationValue/@lido:pref = 'alternate')]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:if test="lido:appellationValue/@xml:lang">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:attribute name="xml:lang"><xsl:value-of select="lido:appellationValue/@xml:lang" /></xsl:attribute>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:if test="../../lido:rightsType[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:								<xsl:value-of select="../../lido:rightsType[string-length(.)&gt;0][1]" />
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:							<xsl:value-of select="concat(lido:appellationValue, ' [Resource]')"/>
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:				<xsl:for-each select="lido:resourceSource[string-length(.)&gt;0]">
schemas/lido-v0.9-to-ese-v3.3-transform-v2.xsl:						<xsl:if test="@lido:type"><xsl:value-of select="concat(@lido:type, ': ')" /></xsl:if>
Binary file work/org/apache/jsp/WEB_002dINF/jsp/editor_jsp.class matches
work/org/apache/jsp/WEB_002dINF/jsp/editor_jsp.java:      out.write(" <span id='lido09Notice'></span></font></p>\n");
Binary file work/org/apache/jsp/WEB_002dINF/jsp/home_jsp.class matches
work/org/apache/jsp/WEB_002dINF/jsp/home_jsp.java: int totallido=0;
work/org/apache/jsp/WEB_002dINF/jsp/home_jsp.java:	            totallido+=transformed;
work/org/apache/jsp/WEB_002dINF/jsp/home_jsp.java:      out.print(totallido );
Binary file work/org/apache/jsp/WEB_002dINF/jsp/import_jsp.class matches
work/org/apache/jsp/WEB_002dINF/jsp/import_jsp.java:          out.write("\tThis is a LIDO import</div></li>\r\n");
work/org/apache/jsp/WEB_002dINF/jsp/import_jsp.java:    _jspx_th_s_005fcheckbox_005f0.setName("isLido");
work/org/apache/jsp/WEB_002dINF/jsp/import_jsp.java:    _jspx_th_s_005fcheckbox_005f0.setId("isLido");
Binary file work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.class matches
work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.java:              _jspx_th_s_005fif_005f13.setTest("lido==false");
work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.java:    _jspx_th_s_005fif_005f9.setTest("lido==true && status=='OK'");
work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.java:        out.write("&transformed=true\" title=\"Download tranformed items\" > <img src=\"images/lidodown.png\" width=\"30\" height=\"23\" style=\"vertical-align:middle;margin-left: -3px;\">Download LIDO</a>\r\n");
work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.java:    _jspx_th_s_005felseif_005f11.setTest("lido==true && pub.status!='NOT DONE'");
work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.java:        out.write("\t\t\t\t\t                       \t\t\t\t<div style=\"margin-left:5px;margin-top:10px;\">Lido import, no further processing required. This import can be published directly to Europeana.\r\n");
work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.java:    _jspx_th_s_005felseif_005f12.setTest("lido==true && pub.status=='NOT DONE'");
work/org/apache/jsp/WEB_002dINF/jsp/importsPanel_jsp.java:        out.write("\t\t\t\t\t\t\t\t\t\t          \t\t\t\t<div style=\"margin-left:5px;margin-top:10px;\">Lido import, no further processing required. This import can be published directly to Europeana.\r\n");
Binary file work/org/apache/jsp/WEB_002dINF/jsp/mapselection_jsp.class matches
work/org/apache/jsp/WEB_002dINF/jsp/mapselection_jsp.java:                  out.write("\t&nbsp;<img src=\"images/complete.png\" style=\" width:16px; margin-left: -5px;margin-right: 2px;\"/><font size=\"0.9em;\"><i>: LIDO complete mappings</i></font></p>\r\n");
